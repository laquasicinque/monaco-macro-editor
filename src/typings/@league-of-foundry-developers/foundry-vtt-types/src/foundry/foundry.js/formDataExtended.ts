
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\formDataExtended.d.ts",
      "/**\n * An extension of the native FormData implementation.\n *\n * This class functions the same way that the default FormData does, but it is more opinionated about how\n * input fields of certain types should be evaluated and handled.\n *\n * It also adds support for certain Foundry VTT specific concepts including:\n *  Support for defined data types and type conversion\n *  Support for TinyMCE editors\n *  Support for editable HTML elements\n */declare class FormDataExtended extends FormData{/**\n * @param form    - The form being processed\n * @param editors - A record of TinyMCE editor metadata objects, indexed by their update key\n *                  (default: `{}`)\n * @param dtypes  - A mapping of data types for form fields\n *                  (default: `{}`)\n */constructor(form:HTMLFormElement,{editors,dtypes}:{editors?:FormDataExtended['editors'];dtypes?:FormDataExtended['dtypes']});/**\n * A mapping of data types requested for each form field\n * @defaultValue `{}`\n */\ndtypes:Partial<Record<string,string>>;/**\n * A record of TinyMCE editors which are linked to this form\n * @defaultValue `{}`\n */\neditors:Partial<Record<string,FormApplication.FormApplicationEditor>>;/**\n * Process the HTML form element to populate the FormData instance.\n * @param form - The HTML form\n */\nprocess(form:HTMLFormElement):void;/**\n * Export the FormData as an object\n */\ntoObject():Record<string,unknown>;}"
    ]
  