
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\pixi\\containers\\placeableObjects\\ambientSound.d.ts",
      "import type{ConfiguredDocumentClass}from'../../../../../types/helperTypes';declare global{/**\n * An AmbientSound is an implementation of PlaceableObject which represents a dynamic audio source within the Scene.\n *\n * @example\n * ```typescript\n * AmbientSound.create({\n *   t: \"l\",\n *   x: 1000,\n *   y: 1000,\n *   radius: 60,\n *   easing: true,\n *   path: \"sounds/audio-file.mp3\",\n *   repeat: true,\n *   volume: 0.4\n * });\n * ```\n */class AmbientSound extends PlaceableObject<InstanceType<ConfiguredDocumentClass<typeof AmbientSoundDocument>>>{/**\n * The Howl instance used to play this AmbientSound effect\n */\nhowl:any;/**\n * The Howl sound ID of the playing instance of this sound\n */\nhowlId?:number;/**\n * Create an audio helper instance to use for the Ambient Sound\n */protected _createHowl():any;/** @override */static get embeddedName():'AmbientSound';/**\n * @remarks\n * Not implemented for AmbientSound\n */get bounds():never;/**\n * A convenience accessor for the sound type\n */get type():'l'|'g';/**\n * A convenience accessor for the sound radius in pixels\n */get radius():number;/**\n * Toggle playback of the sound depending on whether or not it is audible\n * @param isAudible - Is the sound audible?\n * @param volume    - The target playback volume\n * @param fade      - Whether to fade the volume from its previous level\n */\nplay(isAudible:boolean,volume?:number,{fade}?:{fade?:boolean}):void|number;/**\n * @override\n * @remarks\n * Returns void\n */\nclear():any;/** @override */\ndraw():Promise<this>;/**\n * Draw the graphical preview of the audio source area of effect\n */protected drawField():PIXI.Container;/**\n * Draw the ControlIcon for the AmbientLight\n */protected _drawControlIcon():ControlIcon;/** @override */\nrefresh():this;/**\n * Compute the field-of-vision for an object, determining its effective line-of-sight and field-of-vision polygons\n * @returns An object containing the rays, LOS polygon, and FOV polygon for the light\n */\ncomputeFOV():{fov:PIXI.Polygon|null;los:PIXI.Polygon|null;rays:Array<Ray>|null;};/** @override */protected _onCreate():void;/** @override */protected _onUpdate(data:AmbientSound.Data):void;/** @override */protected _onDelete():void;}namespace AmbientSound{interface Data{easing:boolean;path:string;radius:number;repeat:boolean;type:'l'|'g';volume:number;x:number;y:number;}}}"
    ]
  