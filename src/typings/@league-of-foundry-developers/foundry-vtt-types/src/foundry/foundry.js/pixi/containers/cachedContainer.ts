
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\pixi\\containers\\cachedContainer.d.ts",
      "/**\n * A special type of PIXI.Container which draws its contents to a cached RenderTexture.\n * This is accomplished by overriding the Container#render method to draw to our own special RenderTexture.\n */declare class CachedContainer extends PIXI.Container{constructor();/**\n * The RenderTexture that is the render destination for the contents of this Container\n */readonly renderTexture:PIXI.RenderTexture;protected _onResize:()=>void;/**\n * An object which stores a reference to the normal renderer target and source frame.\n * We track this so we can restore them after rendering our cached texture.\n */protected _backup:{renderTexture:PIXI.RenderTexture|undefined;sourceFrame:PIXI.Rectangle;};/**\n * An RGBA array used to define the clear color of the RenderTexture\n * @defaultValue `[0, 0, 0, 1]`\n */\nclearColor:[r:number,g:number,b:number,a:number];/**\n * Should our Container also be displayed on screen, in addition to being drawn to the cached RenderTexture?\n * @defaultValue `false`\n */\ndisplayed:boolean;destroy(options?:Parameters<PIXI.Container['destroy']>[0]):ReturnType<PIXI.Container['destroy']>;render(renderer:Parameters<PIXI.Container['render']>[0]):void;/**\n * Bind our cached RenderTexture to the Renderer, replacing the original target.\n * @param renderer - The active canvas renderer\n */protected _bind(renderer:PIXI.Renderer):void;/**\n * Remove our cached RenderTexture from the Renderer, re-binding the original target.\n * @param renderer - The active canvas renderer\n */protected _unbind(renderer:PIXI.Renderer):void;/**\n * Resize the cached RenderTexture when the dimensions or resolution of the Renderer have changed.\n */protected _resize(renderer:PIXI.Renderer):void;}"
    ]
  