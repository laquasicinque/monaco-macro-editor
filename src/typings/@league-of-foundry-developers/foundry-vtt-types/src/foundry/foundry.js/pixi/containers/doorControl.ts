
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\pixi\\containers\\doorControl.d.ts",
      "/**\n * An icon representing a Door Control\n */declare class DoorControl extends PIXI.Container{constructor(wall:Wall);wall:Wall;/**\n * Draw the DoorControl icon, displaying it's icon texture and border\n */\ndraw():Promise<this>;icon?:PIXI.Sprite;bg?:PIXI.Graphics;border?:PIXI.Graphics;/**\n * Get the icon texture to use for the Door Control icon based on the door state\n */protected _getTexture():Promise<ReturnType<typeof getTexture>>;reposition():void;/**\n * Determine whether the DoorControl is visible to the calling user's perspective.\n * The control is always visible if the user is a GM and no Tokens are controlled.\n * @see {@link SightLayer#testVisibility}\n */get isVisible():boolean;protected _onMouseOver(ev:PIXI.InteractionEvent):void;protected _onMouseOut(ev:JQuery.Event|PIXI.InteractionEvent):void;/**\n * Handle left mouse down events on the door control icon.\n * This should only toggle between the OPEN and CLOSED states.\n */protected _onMouseDown(event:PIXI.InteractionEvent):false|void;/**\n * Handle right mouse down events on the door control icon\n * This should toggle whether the door is LOCKED or CLOSED\n */protected _onRightDown(event:PIXI.InteractionEvent):void;}"
    ]
  