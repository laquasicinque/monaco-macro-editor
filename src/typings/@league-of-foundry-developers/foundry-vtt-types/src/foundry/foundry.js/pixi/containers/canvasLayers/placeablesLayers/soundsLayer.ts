
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\pixi\\containers\\canvasLayers\\placeablesLayers\\soundsLayer.d.ts",
      "/**\n * This Canvas Layer provides a container for AmbientSound objects.\n * @see {@link AmbientSound}\n */declare class SoundsLayer extends PlaceablesLayer<'AmbientSound',SoundsLayer.LayerOptions>{/**\n * Track whether to actively preview ambient sounds with mouse cursor movements\n * @defaultValue `false`\n */\nlivePreview:boolean;/**\n * @remarks This is not overridden in foundry but reflects the real behavior.\n */static get instance():Canvas['sounds'];/**\n * @override\n * @defaultValue\n * ```\n * foundry.utils.mergeObject(super.layerOptions, {\n *  name: \"sounds\",\n *  zIndex: 300\n * })\n * ```\n * */static get layerOptions():SoundsLayer.LayerOptions;/** @override */static documentName:'AmbientSound';/** @override */\ntearDown():Promise<this>;/**\n * Initialize all AmbientSound sources which are present on this layer\n */\ninitializeSources():void;/**\n * Update all AmbientSound effects in the layer by toggling their playback status.\n * Sync audio for the positions of tokens which are capable of hearing.\n * @param options - Additional options forwarded to AmbientSound synchronization\n *                  (defaultValue: `{}`)\n */\nrefresh(options?:{fade?:number}):number|void;/**\n * Preview ambient audio for a given mouse cursor position\n * @param position - The cursor position to preview\n */\npreviewSound(position:Point):void;/**\n * Terminate playback of all ambient audio sources\n */\nstopAll():void;/**\n * Sync the playing state and volume of all AmbientSound objects based on the position of listener points\n * @param listeners - Locations of listeners which have the capability to hear\n * @param options   - Additional options forwarded to AmbientSound synchronization\n *                    (defaultValue: `{}`)\n */protected _syncPositions(listeners:Point[],options?:{fade?:number}):void;/**\n * Define the easing function used to map radial distance to volume.\n * Uses cosine easing which graduates from volume 1 at distance 0 to volume 0 at distance 1\n * @returns The target volume level\n */protected _getEasingVolume(distance:number,radius:number):number;/**\n * Actions to take when the darkness level of the Scene is changed\n * @param darkness - The new darkness level\n * @param prior    - The prior darkness level\n */protected _onDarknessChange(darkness:number,prior:number):void;/**\n * Handle mouse cursor movements which may cause ambient audio previews to occur\n * @param event - The initiating mouse move interaction event\n */protected _onMouseMove(event:PIXI.InteractionEvent):void;/** @override */protected _onDragLeftStart(event:PIXI.InteractionEvent):ReturnType<AmbientSound['draw']>;/** @override */protected _onDragLeftMove(event:PIXI.InteractionEvent):void;/** @override */protected _onDragLeftDrop(event:PIXI.InteractionEvent):void;/** @override */protected _onDragLeftCancel(event:PointerEvent):void;/**\n * @deprecated since 0.8.2\n */\nupdate(options?:{fade?:number}):ReturnType<this['refresh']>;}declare namespace SoundsLayer{interface LayerOptions extends PlaceablesLayer.LayerOptions<'AmbientSound'>{name:'sounds';zIndex:300;}}"
    ]
  