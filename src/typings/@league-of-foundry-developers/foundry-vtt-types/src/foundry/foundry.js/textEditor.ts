
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\textEditor.d.ts",
      "/**\n * A collection of helper functions and utility methods related to the rich text editor\n */declare class TextEditor{/**\n * Create a Rich Text Editor. The current implementation uses TinyMCE\n * @param options - Configuration options provided to the Editor init\n * @param content - Initial HTML or text content to populate the editor with\n *                  (default: `''`)\n * @returns The editor instance.\n */static create(options:TextEditor.Options,content:string):Promise<tinyMCE.Editor>;/**\n * Safely decode an HTML string, removing invalid tags and converting entities back to unicode characters.\n * @param html - The original encoded HTML string\n * @returns The decoded unicode string\n */static decodeHTML(html:string):string;/**\n * Enrich HTML content by replacing or augmenting components of it\n * @param content  - The original HTML content (as a string)\n * @param options  - Additional options which configure how HTML is enriched\n *                   (default: `{}`)\n * @returns The enriched HTML content\n */static enrichHTML(content:string,options?:Partial<TextEditor.EnrichOptions>):string;/**\n * Preview an HTML fragment by constructing a substring of a given length from its inner text.\n * @param content - The raw HTML to preview\n * @param length  - The desired length\n *                  (default: `250`)\n * @returns The previewed HTML\n */static previewHTML(content:string,length:number):string;/**\n * Truncate a fragment of text to a maximum number of characters.\n * @param text       - The original text fragment that should be truncated to a maximum length\n * @param maxLength  - The maximum allowed length of the truncated string.\n *                     (default: `50`)\n * @param splitWords - Whether to truncate by splitting on white space (if true) or breaking words.\n *                     (default: `true`)\n * @param suffix     - A suffix string to append to denote that the text was truncated.\n *                     (default: `'â€¦'`)\n */static truncateText(text:string,{maxLength,splitWords,suffix}?:{maxLength?:number;splitWords?:boolean;suffix?:string}):string;/**\n * Recursively identify the text nodes within a parent HTML node for potential content replacement.\n * @param parent - The parent HTML Element\n * @returns An array of contained Text nodes\n */protected static _getTextNodes(parent:HTMLElement):Text[];/**\n * Facilitate the replacement of text node content using a matching regex rule and a provided replacement function.\n */protected static _replaceTextContent(text:Text[],rgx:RegExp,func:(...match:RegExpMatchArray[])=>Node):boolean;/**\n * Replace a matched portion of a Text node with a replacement Node\n */protected static _replaceTextNode(text:Text,match:RegExpMatchArray,replacement:Node):void;/**\n * Create a dynamic entity link from a regular expression match\n * @param match  - The full matched string\n * @param type   - The matched entity type or \"Compendium\"\n * @param target - The requested match target (_id or name)\n * @param name   - A customized or over-ridden display name for the link\n * @returns An HTML element for the entity link\n */protected static _createEntityLink(match:string,type:string,target:string,name:string):HTMLAnchorElement;/**\n * Replace a hyperlink-like string with an actual HTML <a> tag\n * @param match - The full matched string\n * @returns An HTML element for the entity link\n */protected static _createHyperlink(match:string):HTMLAnchorElement;/**\n * Replace an inline roll formula with a rollable <a> element or an eagerly evaluated roll result\n * @param match   - The matched string\n * @param command - An optional command\n * @param formula - The matched formula\n * @param closing - The closing brackets for the inline roll\n * @returns The replaced match\n */protected static _createInlineRoll(match:string,command:string,formula:string,closing:string,...args:object[]):string;static activateListeners():void;/**\n * Handle click events on Entity Links\n */protected static _onClickEntityLink(event:Event):Promise<void>;/**\n * Handle left-mouse clicks on an inline roll, dispatching the formula or displaying the tooltip\n * @param event - The initiating click event\n */protected static _onClickInlineRoll(event:MouseEvent):Promise<void|Promise<void>|Promise<ChatMessage>|object>;/**\n * Begin a Drag+Drop workflow for a dynamic content link\n * @param event - The originating drag event\n */protected static _onDragEntityLink(event:Event):void;/**\n * Begin a a data transfer drag event with default handling\n */protected _onDragStart(event:Event):void;/**\n * Handle dropping of transferred data onto the active rich text editor\n * @param event  - The originating drop event which triggered the data transfer\n * @param editor - The TinyMCE editor instance being dropped on\n */protected static _onDropEditorData(event:Event,editor:tinyMCE.Editor):Promise<void>;protected static _decoder:HTMLTextAreaElement;}declare namespace TextEditor{interface Options{/**\n * @defaultValue `false`\n */\nbranding?:boolean;/**\n * @defaultValue `['/css/mce.css']`\n */\ncontent_css?:string[];/**\n * @defaultValue `false`\n */\nmenubar?:boolean;/**\n * @defaultValue `'lists image table hr code save link'`\n */\nplugins?:string;/**\n * @defaultValue `true`\n */\nsave_enablewhendirty?:boolean;/**\n * @defaultValue `false`\n */\nstatusbar?:boolean;style_formats?:[{items?:[{/**\n * @defaultValue `'section'`\n */\nblock?:string;/**\n * @defaultValue `'secrect'`\n */\nclasses?:string;/**\n * @defaultValue `'Secret'`\n */\ntitle?:string;/**\n * @defaultValue `true`\n */\nwrapper?:boolean;}];/**\n * @defaultValue `'Custom'`\n */\ntitle?:string;}];/**\n * @defaultValue `true`\n */\nstyle_formats_merge?:boolean;/**\n * @defaultValue `{}`\n */\ntable_default_styles?:object;target:HTMLElement;/**\n * @defaultValue `'styleselect bullist numlist image table hr link removeformat code save'`\n */\ntoolbar?:string;}interface EnrichOptions{/**\n * Include secret tags in the final HTML? If false secret blocks will be removed.\n * @defaultValue `false`\n */\nsecrets:boolean;/**\n * Replace dynamic entity links?\n * @defaultValue `true`\n */\nentities:boolean;/**\n * Replace hyperlink content?\n * @defaultValue `true`\n */\nlinks:boolean;/**\n * Replace inline dice rolls?\n * @defaultValue `true`\n */\nrolls:boolean;/**\n * The data object providing context for inline rolls\n */\nrollData:object|(()=>object);}}"
    ]
  