
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\userTargets.d.ts",
      "import{ConfiguredDocumentClass}from'../../types/helperTypes';import{ObjectClass}from'../../types/helperTypes';interface SetReplacementMembers<T>{add(value:T):void;delete(value:T):void;clear():void;}type PatchedSet<T>=Omit<Set<T>,'add'|'delete'|'clear'>&SetReplacementMembers<T>;interface PatchedSetConstructor{new<T=any>(values?:readonly T[]|null):PatchedSet<T>;readonly prototype:PatchedSet<any>;}declare const Set:PatchedSetConstructor;declare global{/**\n * A subclass of Set which manages the Token ids which the User has targeted.\n * @see User#targets\n */class UserTargets extends Set<InstanceType<ObjectClass<typeof TokenDocument>>>{constructor(user:UserTargets['user']);user:InstanceType<ConfiguredDocumentClass<typeof User>>;/**\n * Return the Token IDs which are user targets\n */get ids():string[];/**\n * @override\n * @remarks Returns void, but Set<T>.add returns boolean\n */\nadd(token:InstanceType<ObjectClass<typeof TokenDocument>>):void;/** @override */\nclear():void;/**\n * @override\n * @remarks Returns void, but Set<T>.delete returns boolean\n */delete(token:InstanceType<ObjectClass<typeof TokenDocument>>):void;/**\n * Dispatch the targetToken hook whenever the user's target set changes\n */protected _hook(token:InstanceType<ObjectClass<typeof TokenDocument>>,targeted:boolean):void;}}"
    ]
  