
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\tabs.d.ts",
      "declare interface TabsConfiguration{/**\n * The CSS selector used to target the navigation element for these tabs\n */\nnavSelector:string;/**\n * The CSS selector used to target the content container for these tabs\n */\ncontentSelector?:string;/**\n * The tab name of the initially active tab\n */\ninitial?:string;/**\n * An optional callback function that executes when the active tab is changed\n */\ncallback?:((event:MouseEvent|null,tabs:Tabs,tabName:string)=>unknown)|null;}/**\n * A controller class for managing tabbed navigation within an Application instance.\n * @see {@link Application}\n *\n * @example\n * ```html\n * <!-- Example HTML -->\n * <nav class=\"tabs\" data-group=\"primary-tabs\">\n *   <a class=\"item\" data-tab=\"tab1\">Tab 1</li>\n *   <a class=\"item\" data-tab=\"tab2\">Tab 2</li>\n * </nav>\n *\n * <section class=\"content\">\n *   <div class=\"tab\" data-tab=\"tab1\" data-group=\"primary-tabs\">Content 1</div>\n *   <div class=\"tab\" data-tab=\"tab2\" data-group=\"primary-tabs\">Content 2</div>\n * </section>\n * ```\n * @example\n * ```typescript\n * // JavaScript\n * const tabs = new Tabs({navSelector: \".tabs\", contentSelector: \".content\", initial: \"tab1\"});\n * tabs.bind(html);\n * ```\n */declare class Tabs{/**\n * @param config - The Tabs Configuration to use for this tabbed container\n */constructor(config:TabsConfiguration);/**\n * The value of the active tab\n */\nactive:TabsConfiguration['initial'];/**\n * A callback function to trigger when the tab is changed\n */\ncallback:TabsConfiguration['callback'];/**\n * The CSS selector used to target the tab navigation element\n */protected _navSelector:TabsConfiguration['navSelector'];/**\n * A reference to the HTML navigation element the tab controller is bound to\n * @defaultValue `null`\n */protected _nav:HTMLElement|null;/**\n * The CSS selector used to target the tab content element\n */protected _contentSelector:TabsConfiguration['contentSelector'];/**\n * A reference to the HTML container element of the tab content\n * @defaultValue `null`\n */protected _content:HTMLElement|null;/**\n * Bind the Tabs controller to an HTML application\n */\nbind(html:HTMLElement):void;/**\n * Activate a new tab by name\n * @param triggerCallback - (default: `false`)\n */\nactivate(tabName:string,{triggerCallback}?:{triggerCallback?:boolean}):void;/**\n * Handle click events on the tab navigation entries\n * @param event - A left click event\n */protected _onClickNav(event:MouseEvent):void;}declare const TabsV2:typeof Tabs;"
    ]
  