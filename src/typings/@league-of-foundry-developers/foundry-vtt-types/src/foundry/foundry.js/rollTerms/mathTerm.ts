
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\rollTerms\\mathTerm.d.ts",
      "declare global{/**\n * A type of RollTerm used to apply a function from the Math library.\n */class MathTerm extends RollTerm{constructor({fn,terms,options}:MathTermData);/**\n * The named function in the Math environment which should be applied to the term\n */\nfn:MathTermData['fn'];/** An array of string argument terms for the function */\nterms:NonNullable<MathTermData['terms']>;/**\n * The cached Roll instances for each function argument\n * @defaultValue `[]`\n */\nrolls:Roll[];/**\n * The cached result of evaluating the method arguments\n * @defaultValue `undefined`\n */\nresult?:number;/**\n * @defaultValue `true`\n */\nisIntermediate:boolean;/**\n * @defaultValue `[\"fn\", \"terms\"]`\n */static SERIALIZE_ATTRIBUTES:string[];/**\n * An array of evaluated DiceTerm instances that should be bubbled up to the parent Roll\n */get dice():DiceTerm[]|undefined;get total():number|undefined;get expression():string;protected _evaluateSync({minimize,maximize}?:{minimize?:boolean;maximize?:boolean}):this;protected _evaluate({minimize,maximize}?:{minimize?:boolean;maximize?:boolean}):Promise<this>;}}interface MathTermData{fn:string;/**\n * @defaultValue `[]`\n */\nterms?:string[];/**\n * @defaultValue `{}`\n */\noptions?:RollTerm.Options;}export{};"
    ]
  