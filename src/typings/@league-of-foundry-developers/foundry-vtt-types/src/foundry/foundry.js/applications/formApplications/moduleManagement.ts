
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\moduleManagement.d.ts",
      "/**\n * The Module Management Application.\n * This application provides a view of which modules are available to be used and allows for configuration of the\n * set of modules which are active within the World.\n */declare class ModuleManagement extends FormApplication<FormApplication.Options,ModuleManagement.Data,any>{/**\n * @defaultValue `'all'`\n */protected _filter:ModuleManagement.FilterName;/**\n * @defaultValue `false`\n */protected _expanded:boolean;/**\n * @defaultValue `{}`\n */protected _checked:Partial<Record<string,boolean>>;/**\n * @override\n * @defaultValue\n * ```typescript\n * mergeObject(super.defaultOptions, {\n *   title: game.i18n.localize(\"MODMANAGE.Title\"),\n *   id: \"module-management\",\n *   template: \"templates/sidebar/apps/module-management.html\",\n *   popOut: true,\n *   width: 680,\n *   height: \"auto\",\n *   scrollY: [\".package-list\"],\n *   closeOnSubmit: false,\n *   filters: [{inputSelector: 'input[name=\"search\"]', contentSelector: \".package-list\"}]\n * });\n * ```\n */static get defaultOptions():typeof FormApplication['defaultOptions'];/** @override */get isEditable():boolean;/** @override */\ngetData(options?:Partial<FormApplication.Options>):ModuleManagement.Data;/** @override */\nactivateListeners(html:JQuery):void;/**\n * @param event - (unused)\n * @override\n */protected _updateObject(event:Event,formData:ModuleManagement.FormData):Promise<unknown>;/**\n * Handle changes to a module checkbox to prompt for whether or not to enable dependencies\n */protected _onChangeCheckbox(event:JQuery.ChangeEvent):void;/**\n * Handle a button-click to deactivate all modules\n */protected _onDeactivateAll(event:JQuery.ClickEvent):void;/**\n * Handle expanding or collapsing the display of descriptive elements\n */protected _onExpandCollapse(event:JQuery.ClickEvent):void;/**\n * Handle a button-click to deactivate all modules\n */protected _onFilterList(event:JQuery.ClickEvent):void;/** @override */protected _onSearchFilter(event:KeyboardEvent,query:string,rgx:RegExp,html:HTMLElement):void;static readonly CONFIG_SETTING:'moduleConfiguration';}declare namespace ModuleManagement{interface Data{editable:ModuleManagement['isEditable'];filters:[Data.Filter<'all'>,Data.Filter<'active'>,Data.Filter<'inactive'>];modules:Data.Module[];query:undefined;expanded:ModuleManagement['_expanded'];}namespace Data{interface Filter<F extends FilterName>{id:F;label:string;css:' active'|'';count:number;}interface Module extends foundry.utils.Duplicated<Game.Module>{active:boolean;css:' active'|'';hasPacks:boolean;hasScripts:boolean;hasStyles:boolean;systemOnly:boolean;systemTag:Game['system']['id'];incompatible:any;unavailable:any;dependencies:string[]|null;}}type FilterName='all'|'active'|'inactive';interface FormData{search:string;}}"
    ]
  