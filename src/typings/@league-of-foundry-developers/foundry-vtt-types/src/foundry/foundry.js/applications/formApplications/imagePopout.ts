
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\imagePopout.d.ts",
      "/**\n * An Image Popout Application which features a single image in a lightbox style frame.\n * This popout can also be used as a form, allowing the user to edit an image which is being used.\n * Furthermore, this application allows for sharing the display of an image with other connected players.\n *\n * @example\n * ```typescript\n * // Construct the Application instance\n * const ip = new ImagePopout(\"path/to/image.jpg\", {\n *   title: \"My Featured Image\",\n *   shareable: true,\n *   entity: game.actors.getName(\"My Hero\")\n * });\n *\n * // Display the image popout\n * ip.render(true);\n *\n * // Share the image with other connected players\n * ip.share();\n * ```\n */declare class ImagePopout extends FormApplication<ImagePopout.Options,ImagePopout.Data,string>{constructor(src:string,options?:ImagePopout.Options);/**\n * @defaultValue `null`\n */protected _related:foundry.abstract.Document<any,any>|null;/** @override */static get defaultOptions():ImagePopout.Options;/** @override */get title():string;/** @override */\ngetData(options?:Partial<ImagePopout.Options>):Promise<ImagePopout.Data>;/**\n * Test whether the title of the image popout should be visible to the user\n */\nisTitleVisible():boolean;/**\n * Provide a reference to the Entity referenced by this popout, if one exists\n */\ngetRelatedObject():Promise<foundry.abstract.Document<any,any>|null>;/** @override */protected _render(force?:boolean,options?:Application.RenderOptions<ImagePopout.Options>):Promise<void>;/** @override */protected _getHeaderButtons():Application.HeaderButton[];/**\n * Determine the correct position and dimensions for the displayed image\n * @returns The positioning object which should be used for rendering\n */protected static getPosition(img:string):Promise<{width:number;height:number}|{width:number;height:number;top:number;left:number}>;/**\n * Determine the Image dimensions given a certain path\n */static getImageSize(path:string):Promise<[width:number,height:number]>;/**\n * Share the displayed image with other connected Users\n */\nshareImage():void;/**\n * Handle a received request to display an image.\n */protected static _handleShareImage({image,title,uuid}?:{image:string;title:string;uuid:string;}):ImagePopout;/**\n * @override\n * @remarks Not implemented for ImagePopout\n */protected _updateObject(event:Event,formData?:object):never;}declare namespace ImagePopout{interface Options extends FormApplication.Options{/**\n * @defaultValue `'templates/apps/image-popout.html'`\n */\ntemplate:string;/**\n * @defaultValue `['image-popout', 'dark']`\n */\nclasses:string[];/**\n * @defaultValue `false`\n */\neditable:boolean;/**\n * @defaultValue `true`\n */\nresizable:boolean;/**\n * @defaultValue `false`\n */\nshareable:boolean;/**\n * @defaultValue `null`\n */\nuuid:string|null;}interface Data{image:string;options:Options;title:string;showTitle:boolean;}}"
    ]
  