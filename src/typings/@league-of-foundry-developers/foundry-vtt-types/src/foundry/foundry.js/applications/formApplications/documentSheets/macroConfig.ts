
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\documentSheets\\macroConfig.d.ts",
      "import type{ConfiguredDocumentClass}from'../../../../../types/helperTypes';declare global{/**\n * A Macro configuration sheet\n *\n * @see {@link Macro} The Macro Entity which is being configured\n * @typeParam Options - the type of the options object\n * @typeParam Data    - The data structure used to render the handlebars template.\n */class MacroConfig<\nOptions extends DocumentSheet.Options=MacroConfig.Options,Data extends object=MacroConfig.Data<Options>>extends DocumentSheet<Options,Data,InstanceType<ConfiguredDocumentClass<typeof Macro>>>{/**\n * @override\n * @defaultValue\n * ```typescript\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   classes: [\"sheet\", \"macro-sheet\"],\n *   template: \"templates/sheets/macro-config.html\",\n *   width: 560,\n *   height: 480,\n *   resizable: true\n * });\n * ```\n */static get defaultOptions():MacroConfig.Options;/** @override */get id():string;/** @override */\ngetData(options?:Partial<Options>):Data;/** @override */\nactivateListeners(html:JQuery):void;/**\n * Handle changing the actor profile image by opening a FilePicker\n * @internal\n */protected _onEditImage(event:JQuery.ClickEvent):ReturnType<FilePicker['browse']>;/**\n * Save and execute the macro using the button on the configuration sheet\n * @param event - The originating click event\n * @internal\n */protected _onExecute(event:JQuery.ClickEvent):Promise<void>;/** @override */protected _updateObject(event:Event,formData:MacroConfig.FormData):Promise<InstanceType<ConfiguredDocumentClass<typeof Macro>>|undefined>;}namespace MacroConfig{type Options=DocumentSheet.Options;/**\n * @typeParam Options - the type of the options object\n */interface Data<Options extends DocumentSheet.Options>extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClass<typeof Macro>>,Options>{macroTypes:Array<ValueOf<typeof CONST.MACRO_TYPES>>;macroScopes:typeof foundry.CONST['MACRO_SCOPES'];}type FormData={command:string;img:string;name:string;type:ValueOf<typeof CONST.MACRO_TYPES>;};}}"
    ]
  