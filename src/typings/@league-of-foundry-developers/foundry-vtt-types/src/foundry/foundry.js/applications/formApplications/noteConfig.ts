
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\noteConfig.d.ts",
      "/**\n * Placeable Note configuration sheet\n * @typeParam P - the type of the options object\n */declare class NoteConfig<P extends FormApplication.Options=FormApplication.Options>extends FormApplication<\nP,NoteConfig.Data,Note>{/**\n * @param note    - The Note object for which settings are being configured\n * @param options - Additional Application options\n */constructor(note:Note,options?:Partial<P>);/**\n * @override\n * @defaultValue\n * ```typescript\n * mergeObject(super.defaultOptions, {\n *   id: \"note-config\",\n *   title: game.i18n.localize(\"NOTE.ConfigTitle\"),\n *   template: \"templates/scene/note-config.html\",\n *   width: 400\n * });\n * ```\n */static get defaultOptions():typeof FormApplication['defaultOptions'];/**\n * @param options - (unused)\n * @override\n */\ngetData(options?:Partial<P>):NoteConfig.Data;/**\n * @param event - (unused)\n * @override\n */protected _updateObject(event:Event,formData:NoteConfig.FormData):Promise<Note>;/**\n * @override\n */\nclose(options?:Application.CloseOptions):Promise<void>;}declare namespace NoteConfig{interface Data{entryIcons:typeof CONFIG.JournalEntry['noteIcons'];entryId:JournalEntry['_id']|undefined;entryName:JournalEntry['name']|undefined;entries:Journal['entities'];fontFamilies:Partial<Record<string,string>>;object:foundry.utils.Duplicated<NoteConfig['object']['data']>;options:NoteConfig['options'];textAnchors:Record<foundry.CONST.TextAnchorPoint,string>;}interface FormData{entryId:Note.Data['entryId'];fontFamily:Note.Data['fontFamily'];fontSize:Note.Data['fontSize']|null;icon:Note.Data['icon'];iconSize:Note.Data['iconSize']|null;iconTint:Note.Data['iconTint'];text:Note.Data['text'];textAnchor:Note.Data['textAnchor'];textColor:Note.Data['textColor'];x:Note.Data['x']|null;y:Note.Data['y']|null;}}"
    ]
  