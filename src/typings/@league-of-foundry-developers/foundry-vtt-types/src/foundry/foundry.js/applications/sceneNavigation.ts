
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\sceneNavigation.d.ts",
      "/**\n * Top menu scene navigation\n */declare class SceneNavigation extends Application{/**\n * Assign the default options which are supported by the SceneNavigation UI\n * @defaultValue\n * ```typescript\n * {\n *   ...super.defaultOptions,\n *   id: 'navigation',\n *   template: 'templates/hud/navigation.html',\n *   popOut: false,\n *   dragDrop: [{dragSelector: \".scene\"}]\n * }\n * ```\n */static get defaultOptions():typeof Application['defaultOptions'];/**\n * Return an Array of Scenes which are displayed in the Navigation bar\n */get scenes():Scene[];/** @override */\nrender(force?:boolean,options?:Application.RenderOptions):this|undefined;/** @override */protected _render(force?:boolean,options?:Application.RenderOptions):Promise<void>;/** @override */\ngetData(options?:Partial<Application.Options>):SceneNavigation.Data|Promise<SceneNavigation.Data>;/**\n * Expand the SceneNavigation menu, sliding it down if it is currently collapsed\n */\nexpand():Promise<boolean>;/**\n * Collapse the SceneNavigation menu, sliding it up if it is currently expanded\n */\ncollapse():Promise<boolean>;/**\n * Activate Scene Navigation event listeners\n */\nactivateListeners(html:JQuery):void;/**\n * Get the set of ContextMenu options which should be applied for Scenes in the menu\n */private _getContextMenuOptions():ContextMenuEntry[];/**\n * Handle left-click events on the scenes in the navigation menu\n */private _onClickScene(event:JQuery.ClickEvent):void;/** @override */protected _onDragStart(event:DragEvent):void;/** @override */protected _onDrop(event:DragEvent):Promise<boolean|undefined|void>;/** @override */private _onToggleNav(event:JQuery.ClickEvent):void;/**\n * Updated the loading progress bar\n * @param context - The message to display in the progress back\n * @param pct     - The percentage the progress bar has completed\n */static _onLoadProgress(context:string,pct:number):void;}declare namespace SceneNavigation{interface Data{collapsed:boolean;scenes:(foundry.utils.Duplicated<Scene['data']>&{users:{letter:string;color:User['data']['color']};visible:boolean;css:[string|null];})[];}}"
    ]
  