
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\compendium.d.ts",
      "/**\n * An interface for displaying the content of a CompendiumCollection.\n * @typeParam Metadata - The metadata of the compendium\n * @typeParam Options  - The type of the options object\n */declare class Compendium<\nMetadata extends CompendiumCollection.Metadata,Options extends Application.Options=Application.Options>extends Application<Options>{constructor(collection:CompendiumCollection<Metadata>,options?:Partial<Options>);collection:CompendiumCollection<Metadata>;/**\n * @override\n * @defaultValue\n * ```typescript\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   template: \"templates/apps/compendium.html\",\n *   width: 350,\n *   height: window.innerHeight - 100,\n *   top: 70,\n *   left: 120,\n *   scrollY: [\".directory-list\"],\n *   dragDrop: [{ dragSelector: \".directory-item\", dropSelector: \".directory-list\" }],\n *   filters: [{inputSelector: 'input[name=\"search\"]', contentSelector: \".directory-list\"}]\n * });\n * ```\n */static get defaultOptions():Application.Options;/** @override */get title():string;/**\n * A convenience redirection back to the metadata object of the associated CompendiumCollection\n */get metadata():this['collection']['metadata'];/** @override */\ngetData(options?:Partial<Options>):Promise<Compendium.Data<Metadata>>;/** @override */\nclose(options?:Application.CloseOptions):Promise<void>;/** @override */\nactivateListeners(html:JQuery):void;/**\n * Handle opening a single compendium entry by invoking the configured entity class and its sheet\n * @param event - The originating click event\n * @remarks\n * This actually returns a promise of {@link FormApplication} but the return type is not meant to be used, so it is\n * typed as `unknown` to give deriving classes more freedom.\n */protected _onClickEntry(event:JQuery.ClickEvent):Promise<unknown>;/** @override */protected _onSearchFilter(event:KeyboardEvent,query:string,rgx:RegExp,html:HTMLElement):void;/** @override */protected _canDragStart(selector:string):boolean;/** @override */protected _canDragDrop(selector:string):boolean;/** @override */protected _onDragStart(event:DragEvent):void;/** @override */protected _onDrop(event:DragEvent):ReturnType<this['collection']['importDocument']>|false;/**\n * Render the ContextMenu which applies to each compendium Document\n */protected _contextMenu(html:JQuery):void;}declare namespace Compendium{interface Data<Metadata extends CompendiumCollection.Metadata>{collection:CompendiumCollection<Metadata>;cssClass:string;index:CompendiumCollection<Metadata>['index'];}}"
    ]
  