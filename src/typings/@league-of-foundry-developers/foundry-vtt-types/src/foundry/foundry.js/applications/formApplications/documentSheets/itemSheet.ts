
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\documentSheets\\itemSheet.d.ts",
      "import{ConfiguredDocumentClass}from'../../../../../types/helperTypes';declare global{/**\n * The Application responsible for displaying and editing a single Item document.\n *\n * @param item    - The Item instance being displayed within the sheet.\n * @param options - Additional application configuration options.\n *\n * @typeParam Options - the type of the options object\n * @typeParam Data    - The data structure used to render the handlebars template.\n */class ItemSheet<\nOptions extends ItemSheet.Options=ItemSheet.Options,Data extends object=ItemSheet.Data<Options>>extends DocumentSheet<Options,Data,InstanceType<ConfiguredDocumentClass<typeof Item>>>{/**\n * @defaultValue\n * ```typescript\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   template: \"templates/sheets/item-sheet.html\",\n *   width: 500,\n *   closeOnSubmit: false,\n *   submitOnClose: true,\n *   submitOnChange: true,\n *   resizable: true,\n *   baseApplication: \"ItemSheet\",\n *   id: \"item\"\n * ```\n */static get defaultOptions():ItemSheet.Options;/** @override */get id():string;/** @override */get title():string;/**\n * A convenience reference to the Item entity\n */get item():InstanceType<ConfiguredDocumentClass<typeof Item>>;/**\n * The Actor instance which owns this item. This may be null if the item is\n * unowned.\n */get actor():this['item']['actor'];/**\n * @param options - (unused)\n * @override\n *\n * @remarks The implementation in {@link ItemSheet} doesn't return a\n * `Promise` but the return type includes it to allow extending classes to\n * do that.\n */\ngetData(options?:Partial<Options>):Data|Promise<Data>;/** @override */protected _getHeaderButtons():Application.HeaderButton[];/** @override */\nactivateListeners(html:JQuery):void;/**\n * Handle requests to configure the default sheet used by this Item\n */protected _onConfigureSheet(event:JQuery.ClickEvent):void;/**\n * Handle changing the item image\n */protected _onEditImage(event:JQuery.ClickEvent):ReturnType<FilePicker['browse']>;}namespace ItemSheet{/**\n * @typeParam Options - the type of the options object\n */interface Data<Options extends ItemSheet.Options=ItemSheet.Options>extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClass<typeof Item>>,Options>{item:this['document'];}type Options=DocumentSheet.Options;}}"
    ]
  