
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\tileConfig.d.ts",
      "/**\n * Tile Config Sheet\n * @typeParam P - the type of the options object\n */declare class TileConfig<P extends TileConfig.Options=TileConfig.Options>extends FormApplication<\nP,TileConfig.Data,Tile>{/**\n * @param tile    - The Tile object being configured\n * @param options - Additional application rendering options\n */constructor(tile:Tile,options?:Partial<P>);/**\n * @override\n * @defaultValue\n * ```typescript\n * mergeObject(super.defaultOptions, {\n *   id: \"tile-config\",\n *   classes: [\"sheet\", \"tile-sheet\"],\n *   title: \"Tile Configuration\",\n *   template: \"templates/scene/tile-config.html\",\n *   width: 400,\n *   submitOnChange: true\n * });\n * ```\n */static get defaultOptions():TileConfig.Options;/**\n * @param options - (unused)\n * @override\n */\ngetData(options?:Partial<P>):TileConfig.Data;/** @override */protected _onChangeInput(event:JQuery.ChangeEvent):void;/**\n * @param event - (unused)\n * @override\n */protected _updateObject(event:Event,formData:TileConfig.FormData):Promise<Tile>;/** @override */\nclose(options:Application.CloseOptions):Promise<void>;}declare namespace TileConfig{interface Data{object:foundry.utils.Duplicated<TileConfig['object']['data']>;options:TileConfig['options'];submitText:'Create'|'Update';}interface FormData{height:Tile.Data['height']|null;img:Tile.Data['img'];rotation:Tile.Data['rotation']|null;width:Tile.Data['width']|null;x:Tile.Data['x']|null;y:Tile.Data['y']|null;}interface Options extends FormApplication.Options{/**\n * Configure a preview version of a tile which is not yet saved\n */\npreview?:boolean;}}"
    ]
  