
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\basePlaceableHUD.d.ts",
      "/**\n * An abstract base class for displaying a heads-up-display interface bound to a Placeable Object on the canvas\n * @typeParam Object - the type of the PlaceableObject\n * @typeParam Options - the type of the options object\n */declare abstract class BasePlaceableHUD<\nObject extends PlaceableObject<any>=PlaceableObject,Options extends Application.Options=Application.Options>extends Application<Options>{/**\n * Reference a PlaceableObject this HUD is currently bound to\n * @defaultValue `undefined`\n */object:Object|undefined;/**\n * @override\n * @defaultValue\n * ```\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   classes: [\"placeable-hud\"],\n *   popOut: false\n * })\n * ```\n */static get defaultOptions():Application.Options;/**\n * Convenience access for the canvas layer which this HUD modifies\n */get layer():Object['layer']|undefined;/**\n * Bind the HUD to a new PlaceableObject and display it\n * @param object - A PlaceableObject instance to which the HUD should be bound\n */\nbind(object:Object):void;/**\n * Clear the HUD by fading out it's active HTML and recording the new display state\n */\nclear():void;/** @override */\n_render(...args:Parameters<Application<Options>['_render']>):Promise<void>;/** @override */\ngetData(options?:Partial<Options>):ReturnType<Object['data']['toJSON']>&{id:string;classes:string;appId:number;isGM:boolean;icons:typeof CONFIG['controlIcons'];};/** @override */\nsetPosition({left,top,width,height,scale}?:Partial<Application.Position>):void;/** @override */\nactivateListeners(html:JQuery):void;/**\n * Handle mouse clicks to control a HUD control button\n * @param event - The originating click event\n * @remarks This will always return a promise with documents is overridden by TokenHUD.\n */protected _onClickControl(event:JQuery.ClickEvent):unknown;/**\n * Toggle the visible state of all controlled objects in the Layer\n * @param event - The originating click event\n * @internal\n */protected _onToggleVisibility(event:JQuery.ClickEvent):Promise<Array<Object['document']>>;/**\n * Toggle locked state of all controlled objects in the Layer\n * @param event - The originating click event\n * @internal\n */protected _onToggleLocked(event:JQuery.ClickEvent):Promise<Array<Object['document']>>;/**\n * Handle sorting the z-order of the object\n * @param up    - Move the object upwards in the vertical stack?\n * @param event - The originating mouse click event\n */protected _onSort(up:boolean,event:JQuery.ClickEvent):Promise<Array<Object['document']>>;}"
    ]
  