
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\playerList.d.ts",
      "import{ConfiguredDocumentClass}from'../../../types/helperTypes';declare global{/**\n * The UI element which displays the list of Users who are currently playing within the active World.\n *\n * @typeParam Options - the type of the options object\n */class PlayerList<Options extends Application.Options=Application.Options>extends Application<Options>{constructor(options?:Partial<Options>);/**\n * An internal toggle for whether or not to show offline players or hide them\n * @defaultValue `false`\n */protected _showOffline:boolean;/**\n * @defaultValue\n * ```typescript\n * mergeObject(super.defaultOptions, {\n *   id: \"players\",\n *   template: \"templates/user/players.html\",\n *   popOut: false\n * })\n * ```\n */static get defaultOptions():Application.Options;/** @override */\nrender(force?:boolean,options?:Application.RenderOptions<Options>):this;/** @override */\ngetData(options?:Partial<Options>):PlayerList.Data|Promise<PlayerList.Data>;/** @override */\nactivateListeners(html:JQuery):void;/**\n * Return the default context options available for the Players application\n */protected _getUserContextOptions():ContextMenuEntry[];/**\n * Toggle display of the Players hud setting for whether or not to display offline players\n * @param event - The originating click event\n */protected _onToggleOfflinePlayers(event:JQuery.ClickEvent):void;}namespace PlayerList{interface Data{users:StoredDocument<InstanceType<ConfiguredDocumentClass<typeof User>>>[];showOffline:boolean;hide:boolean;}}}"
    ]
  