
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\wallConfig.d.ts",
      "/**\n * Wall Configuration Sheet\n */declare class WallConfig<P extends WallConfig.Options=WallConfig.Options>extends FormApplication<\nP,WallConfig.Data,Wall>{/**\n * @param object  - The Wall object for which settings are being configured\n * @param options - Additional options which configure the rendering of the configuration sheet.\n */constructor(object:Wall,options?:Partial<P>);/**\n * @defaultValue\n * ```typescript\n * const options = super.defaultOptions;\n * options.id = \"wall-config\";\n * options.title = \"Wall Configuration\";\n * options.template = \"templates/scene/wall-config.html\";\n * options.width = 400;\n * options.editTargets = [];\n * ```\n */static get defaultOptions():WallConfig.Options;/**\n * Provide a dynamically rendered title for the Wall Configuration sheet\n */get title():string;/**\n * Construct and return the data object used to render the HTML template for this form application.\n */\ngetData():WallConfig.Data;/**\n * This method is called upon form submission after form data is validated\n * @param event    - The initial triggering submission event\n * @param formData - The object of validated form data with which to update the object\n */protected _updateObject(event:Event,formData:WallConfig.FormData):Promise<Wall>;}declare namespace WallConfig{interface Data{object:foundry.utils.Duplicated<WallConfig['object']['data']>;options:WallConfig['options'];moveTypes:{[Key in keyof typeof foundry.CONST['WALL_MOVEMENT_TYPES']as typeof foundry.CONST['WALL_MOVEMENT_TYPES'][Key]]:Titlecase<Key>;};senseTypes:{[Key in keyof typeof foundry.CONST['WALL_SENSE_TYPES']as typeof foundry.CONST['WALL_SENSE_TYPES'][Key]]:Titlecase<Key>;};dirTypes:{[Key in keyof typeof foundry.CONST['WALL_DIRECTIONS']as typeof foundry.CONST['WALL_DIRECTIONS'][Key]]:Titlecase<Key>;};doorTypes:{[Key in keyof typeof foundry.CONST['WALL_DOOR_TYPES']as typeof foundry.CONST['WALL_DOOR_TYPES'][Key]]:Titlecase<Key>;};doorStates:{[Key in keyof typeof foundry.CONST['WALL_DOOR_STATES']as typeof foundry.CONST['WALL_DOOR_STATES'][Key]]:Titlecase<Key>;};isDoor:boolean;}interface FormData{dir:foundry.CONST.WallDirection;door:Wall.Data['door'];ds?:Wall.Data['ds'];move:Wall.Data['move'];sense:Wall.Data['sense'];}interface Options extends FormApplication.Options{/**\n * @defaultValue `[]`\n */\neditTargets:string[];}}"
    ]
  