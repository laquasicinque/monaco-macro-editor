
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\sidebarTabs\\settings.d.ts",
      "import{ConfiguredDocumentClass}from'../../../../types/helperTypes';declare global{/**\n * The sidebar tab which displays various game settings, help messages, and configuration options.\n * The Settings sidebar is the furthest-to-right using a triple-cogs icon.\n * @typeParam Options - The type of the options object\n */class Settings<Options extends Application.Options=Application.Options>extends SidebarTab<Options>{/**\n * @override\n * @defaultValue\n * ```typescript\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   id: \"setting\",\n *   template: \"templates/sidebar/settings.html\".\n *   title: \"Settings\"\n * })\n * ```\n */static get defaultOptions():Application.Options;/**\n * @param options - (unused)\n * @override\n */\ngetData(options?:Partial<Options>):Settings.Data;/**\n * @override\n */\nactivateListeners(html:JQuery):void;/**\n * Delegate different actions for different settings buttons\n */protected _onSettingsButton(event:JQuery.ClickEvent):void;/**\n * Executes with the update notification pip is clicked\n * @param event - The originating click event\n */protected _onUpdateNotificationClick(event:JQuery.ClickEvent):void;}namespace Settings{interface Data{user:InstanceType<ConfiguredDocumentClass<typeof User>>;system:Game['system'];coreVersion:Game['data']['version'];isDemo:boolean;canConfigure:boolean;canSetup:boolean;coreUpdate:string|false;systemUpdate:string|false;modules:number;}}}"
    ]
  