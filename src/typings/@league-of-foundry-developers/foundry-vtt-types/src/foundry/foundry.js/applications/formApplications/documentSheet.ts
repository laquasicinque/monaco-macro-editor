
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\documentSheet.d.ts",
      "import{ToObjectFalseType}from'../../../../types/helperTypes';declare global{/**\n * Extend the FormApplication pattern to incorporate specific logic for viewing or editing Document instances.\n * See the FormApplication documentation for more complete description of this interface.\n * @param object  - A Document instance which should be managed by this form.\n * @param options - Optional configuration parameters for how the form behaves.\n *                  (default: `{}`)\n *\n * @typeParam Options          - the type of the options object\n * @typeParam Data             - The data structure used to render the handlebars template.\n * @typeParam ConcreteDocument - the type of the Document which should be managed by this form sheet\n */abstract class DocumentSheet<\nOptions extends DocumentSheet.Options=DocumentSheet.Options,Data extends object=DocumentSheet.Data,ConcreteDocument extends foundry.abstract.Document<any,any>=Data extends DocumentSheet.Data<infer T>?T:foundry.abstract.Document<any,any>>extends FormApplication<Options,Data,ConcreteDocument>{/**\n * @defaultValue\n * ```typescript\n * foundry.utils.mergeObject(super.defaultOptions, {\n *   classes: ['sheet'],\n *   template: `templates/sheets/${this.name.toLowerCase()}.html`,\n *   viewPermission: CONST.ENTITY_PERMISSIONS.LIMITED\n * });\n * ```\n */static get defaultOptions():DocumentSheet.Options;/**\n * A semantic convenience reference to the Document instance which is the target object for this form.\n */get document():ConcreteDocument;/**\n * @override\n */get id():string;/**\n * @override\n */get isEditable():boolean;/**\n * @override\n */get title():string;/**\n * @override\n */\nclose(options?:FormApplication.CloseOptions):Promise<void>;/**\n * @override\n */\ngetData(options?:Partial<Options>):Data|Promise<Data>;/**\n * @override\n */\nrender(force?:boolean,options?:Application.RenderOptions<Options>):this;/**\n * @override\n */protected _getHeaderButtons():Application.HeaderButton[];/**\n * @param event - (unused)\n * @override\n */protected _updateObject(event:Event,formData:object):Promise<ConcreteDocument|undefined>;/**\n * @deprecated since 0.8.0\n */get entity():ConcreteDocument;}namespace DocumentSheet{/**\n * @typeParam ConcreteDocument - the type of the {@link foundry.abstract.Document} which should be managed by this form sheet\n * @typeParam Options          - the type of the options object\n */interface Data<\nConcreteDocument extends foundry.abstract.Document<any,any>=foundry.abstract.Document<any,any>,Options extends DocumentSheet.Options=DocumentSheet.Options>{cssClass:string;editable:boolean;document:ConcreteDocument;data:ToObjectFalseType<ConcreteDocument>;limited:boolean;options:Options;owner:boolean;title:string;readonly entity:this['data'];}interface Options extends FormApplication.Options{/**\n * @defaultValue `['sheet']`\n */\nclasses:string[];/**\n * @defaultValue\n * ```javascript\n * `templates/sheets/${this.name.toLowerCase()}.html`\n * ```\n */\ntemplate:string;/**\n * @defaultValue {@link ENTITY_PERMISSIONS.LIMITED}\n */\nviewPermission:foundry.CONST.EntityPermission;}}}"
    ]
  