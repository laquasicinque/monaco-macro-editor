
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\contextMenu.d.ts",
      "/**\n * Display a right-click activated Context Menu which provides a dropdown menu of options\n * A ContextMenu is constructed by designating a parent HTML container and a target selector\n * An Array of menuItems defines the entries of the menu which is displayed\n */declare class ContextMenu{/**\n * @param element   - The containing HTML element within which the menu is positioned\n * @param selector  - A CSS selector which activates the context menu.\n * @param menuItems - An Array of entries to display in the menu\n * @param eventName - Optionally override the triggering event which can spawn the menu\n *                    (default: `'contextmenu'`)\n */constructor(element:JQuery,selector:string|null|undefined,menuItems:ContextMenu.Item[],{eventName}?:{eventName?:string});/**\n * The target HTMLElement being selected\n */\nelement:JQuery;/**\n * The target CSS selector which activates the menu\n * @defaultValue `element.attr(\"id\")`\n */\nselector:string;/**\n * An interaction event name which activates the menu\n */\neventName:string;/**\n * The array of menu items being rendered\n */\nmenuItems:ContextMenu.Item[];/**\n * Track which direction the menu is expanded in\n * @defaultValue `false`\n */protected _expandUp:boolean;/**\n * A convenience accessor to the context menu HTML object\n */get menu():JQuery;/**\n * Attach a ContextMenu instance to an HTML selector\n */\nbind():void;/**\n * Animate closing the menu by sliding up and removing from the DOM\n */\nclose():Promise<void>;protected _animateOpen(menu:JQuery):Promise<void>;protected _animateClose(menu:JQuery):Promise<void>;/**\n * Render the Context Menu by iterating over the menuItems it contains\n * Check the visibility of each menu item, and only render ones which are allowed by the item's logical condition\n * Attach a click handler to each item which is rendered\n * @param target - The target element to which the context menu is attached\n */\nrender(target:JQuery):void|Promise<void>;/**\n * Set the position of the context menu, taking into consideration whether the menu should expand upward or downward\n */protected _setPosition(html:JQuery,target:JQuery):void;static eventListeners():void;}interface ContextMenuEntry{/**\n * The context menu label. Can be localized.\n */\nname:string;/**\n * A string containing an HTML icon element for the menu item\n */\nicon:string;/**\n * The function to call when the menu item is clicked. Receives the HTML element of the SidebarTab entry that this context menu is for.\n */\ncallback:(target:JQuery)=>void;/**\n * A function to call to determine if this item appears in the menu. Receives the HTML element of the SidebarTab entry that this context menu is for.\n */\ncondition?:boolean|((target:JQuery)=>boolean);}declare namespace ContextMenu{interface Item{/**\n * The displayed item name\n */\nname:string;/**\n * An icon glyph HTML string\n */\nicon:string;/**\n * A function which returns a Boolean for whether or not to display the item\n */\ncondition?:boolean|((target:JQuery)=>boolean);/**\n * A callback function to trigger when the entry of the menu is clicked\n */\ncallback:(target:JQuery)=>void;}}"
    ]
  