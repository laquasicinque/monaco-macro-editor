
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\imageHelper.d.ts",
      "/**\n * A helper class to provide common functionality for working with Image objects\n */declare class ImageHelper{/**\n * Create thumbnail preview for a provided image path.\n * @param src     - The string URL or DisplayObject of the texture to render to a thumbnail\n * @param options - Additional named options passed to the {@link ImageHelper.compositeCanvasTexture} method\n *                  (default: `{}`)\n * @returns The parsed and converted thumbnail data\n */static createThumbnail(src:string|PIXI.DisplayObject,options?:ImageHelper.CompositeOptions):Promise<ImageHelper.ThumbnailReturn>;/**\n * Composite a canvas object by rendering it to a single texture\n * @param object  - The DisplayObject to render to a texture\n * @param options - Additional named options\n *                  (default: `{}`)\n * @returns The composite Texture object\n */static compositeCanvasTexture(object:PIXI.DisplayObject,options?:ImageHelper.CompositeOptions):PIXI.Texture;/**\n * Extract a texture to a base64 PNG string\n * @param texture - The Texture object to extract\n * @returns A base64 png string of the texture\n */static textureToImage(texture:PIXI.Texture):string;}declare namespace ImageHelper{/**\n * An interface for options for the {@link ImageHelper.createThumbnail} and {@link ImageHelper.compositeCanvasTexture}\n * methods.\n */interface CompositeOptions{/**\n * Center the texture in the rendered frame?\n * @defaultValue `true`\n */\ncenter?:boolean;/**\n * The desired height of the output texture\n * @defaultValue The height of the object passed to {@link ImageHelper.compositeCanvasTexture}\n */\nheight?:number;/**\n * A horizontal translation to apply to the object\n * @defaultValue `0`\n */\ntx?:number;/**\n * A vertical translation to apply to the object\n * @defaultValue `0`\n */\nty?:number;/**\n * The desired width of the output texture\n * @defaultValue The width of the object passed to {@link ImageHelper.compositeCanvasTexture}\n */\nwidth?:number;}/**\n * An interface for return values of the {@link ImageHelper.createThumbnail} method.\n */interface ThumbnailReturn{/**\n * The height of the {@link PIXI.Sprite}, created by {@link ImageHelper.createThumbnail}\n */\nheight:number;/**\n * The originally passed `string` URL or DisplayObject\n */\nsrc:string|PIXI.DisplayObject;/**\n * The Texture, returned from {@link ImageHelper.compositeCanvasTexture}, with `destroy(true)` already called on it.\n */\ntexture:PIXI.Texture;/**\n * The base64 encoded image data, returned from {@link ImageHelper.textureToImage}\n */\nthumb:string;/**\n * The width of the {@link PIXI.Sprite}, created by {@link ImageHelper.createThumbnail}\n */\nwidth:number;}}"
    ]
  