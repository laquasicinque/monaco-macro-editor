
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\documents.mjs\\baseScene.d.ts",
      "import{DocumentMetadata}from'../abstract/document.mjs';import{Document}from'../abstract/module.mjs';import*as data from'../data/data.mjs';import{BaseAmbientLight}from'./baseAmbientLight';import{BaseAmbientSound}from'./baseAmbientSound';import{BaseDrawing}from'./baseDrawing';import{BaseMeasuredTemplate}from'./baseMeasuredTemplate';import{BaseNote}from'./baseNote';import{BaseTile}from'./baseTile';import{BaseToken}from'./baseToken';import{BaseWall}from'./baseWall';/**\n * The base Scene model definition which defines common behavior of an Scene document between both client and server.\n */export declare class BaseScene extends Document<data.SceneData>{/** @override */static get schema():typeof data.SceneData;/** @override */static get metadata():Merge<\nDocumentMetadata,{name:'Scene';collection:'scenes';label:'DOCUMENT.Scene';isPrimary:true;embedded:{AmbientLight:typeof BaseAmbientLight;AmbientSound:typeof BaseAmbientSound;Drawing:typeof BaseDrawing;MeasuredTemplate:typeof BaseMeasuredTemplate;Note:typeof BaseNote;Tile:typeof BaseTile;Token:typeof BaseToken;Wall:typeof BaseWall;};}>;/**\n * A reference to the Collection of Drawing instances in the Scene document, indexed by _id.\n */get drawings():this['data']['drawings'];/**\n * A reference to the Collection of AmbientLight instances in the Scene document, indexed by _id.\n */get lights():this['data']['lights'];/**\n * A reference to the Collection of Note instances in the Scene document, indexed by _id.\n */get notes():this['data']['notes'];/**\n * A reference to the Collection of AmbientSound instances in the Scene document, indexed by _id.\n */get sounds():this['data']['sounds'];/**\n * A reference to the Collection of MeasuredTemplate instances in the Scene document, indexed by _id.\n */get templates():this['data']['templates'];/**\n * A reference to the Collection of Token instances in the Scene document, indexed by _id.\n */get tokens():this['data']['tokens'];/**\n * A reference to the Collection of Tile instances in the Scene document, indexed by _id.\n */get tiles():this['data']['tiles'];/**\n * A reference to the Collection of Wall instances in the Scene document, indexed by _id.\n */get walls():this['data']['walls'];/**\n * Get the Canvas dimensions which would be used to display this Scene.\n * Apply padding to enlarge the playable space and round to the nearest 2x grid size to ensure symmetry.\n * @returns An object describing the configured dimensions\n */static getDimensions({width,height,size,gridDistance,padding,shiftX,shiftY}?:Partial<DimensionsArguments>):Dimensions;}interface DimensionsArguments{width:number;height:number;size:number;gridDistance:number;padding:number;shiftX:number;shiftY:number;}interface Dimensions{sceneWidth:number;sceneHeight:number;size:number;distance:number;shiftX:number;shiftY:number;ratio:number;paddingX:number;width:number;paddingY:number;height:number;}"
    ]
  