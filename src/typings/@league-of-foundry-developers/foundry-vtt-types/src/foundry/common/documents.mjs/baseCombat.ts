
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\documents.mjs\\baseCombat.d.ts",
      "import{ConstructorDataType}from'../../../types/helperTypes';import{DocumentMetadata}from'../abstract/document.mjs';import{Document}from'../abstract/module.mjs';import{data}from'../module.mjs';import{BaseCombatant}from'./baseCombatant';import{BaseUser}from'./baseUser';/**\n * The base Combat model definition which defines common behavior of an Combat document between both client and server.\n */export declare class BaseCombat extends Document<data.CombatData>{static get schema():typeof data.CombatData;static get metadata():Merge<\nDocumentMetadata,{name:'Combat';collection:'combats';label:'DOCUMENT.Combat';embedded:{Combatant:typeof BaseCombatant;};isPrimary:true;permissions:{update:typeof BaseCombat._canUpdate;};}>;/** A reference to the Collection of Combatant instances in the Combat document, indexed by id. */get combatants():this['data']['combatants'];/**\n * Is a user able to update an existing Combat?\n * @param doc - (unused)\n */protected static _canUpdate(user:BaseUser,doc:unknown,data?:ConstructorDataType<data.CombatData>):boolean;}"
    ]
  