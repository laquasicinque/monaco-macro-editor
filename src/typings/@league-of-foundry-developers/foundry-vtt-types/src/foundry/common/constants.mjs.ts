
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\constants.mjs.d.ts",
      "/**\n * The shortened software name\n */export const vtt:'Foundry VTT';/**\n * The full software name\n */export const VTT:'Foundry Virtual Tabletop';/**\n * The software website URL\n */export const WEBSITE_URL:'https://foundryvtt.com';/**\n * An ASCII greeting displayed to the client\n */export const ASCII=`_______________________________________________________________\n _____ ___  _   _ _   _ ____  ______   __ __     _______ _____\n|  ___/ _ \\\\| | | | \\\\ | |  _ \\\\|  _ \\\\ \\\\ / / \\\\ \\\\   / |_   _|_   _|\n| |_ | | | | | | |  \\\\| | | | | |_) \\\\ V /   \\\\ \\\\ / /  | |   | |\n|  _|| |_| | |_| | |\\\\  | |_| |  _ < | |     \\\\ V /   | |   | |\n|_|   \\\\___/ \\\\___/|_| \\\\_|____/|_| \\\\_\\\\|_|      \\\\_/    |_|   |_|\n===============================================================`;/**\n * Define the allowed ActiveEffect application modes\n */export const ACTIVE_EFFECT_MODES:{CUSTOM:0;MULTIPLY:1;ADD:2;DOWNGRADE:3;UPGRADE:4;OVERRIDE:5;};/**\n * Define the string name used for the base entity type when specific sub-types are not defined by the system\n */export const BASE_ENTITY_TYPE:'base';/**\n * Valid Chat Message types\n */export const CHAT_MESSAGE_TYPES:{OTHER:0;OOC:1;IC:2;EMOTE:3;WHISPER:4;ROLL:5;};/**\n * The allowed Entity types which may exist within a Compendium pack\n * This is a subset of ENTITY_TYPES\n */export const COMPENDIUM_ENTITY_TYPES:['Actor','Item','Scene','JournalEntry','Macro','RollTable','Playlist'];/**\n * Define the set of languages which have built-in support in the core software\n */export const CORE_SUPPORTED_LANGUAGES:['en'];/**\n * The default artwork used for Token images if none is provided\n */export const DEFAULT_TOKEN:'icons/svg/mystery-man.svg';/**\n * The default artwork used for Note placeables if none is provided\n */export const DEFAULT_NOTE_ICON:'icons/svg/book.svg';/**\n * The default icon image used for Macro documents if no other image is provided\n */export const DEFAULT_MACRO_ICON:'icons/svg/dice-target.svg';/**\n * The supported dice roll visibility modes\n */export const DICE_ROLL_MODES:{PUBLIC:'roll';PRIVATE:'gmroll';BLIND:'blindroll';SELF:'selfroll';};/**\n * The allowed Drawing types which may be saved\n */export const DRAWING_TYPES:{RECTANGLE:'r';ELLIPSE:'e';TEXT:'t';POLYGON:'p';FREEHAND:'f';};/**\n * The allowed fill types which a Drawing object may display\n * NONE: The drawing is not filled\n * SOLID: The drawing is filled with a solid color\n * PATTERN: The drawing is filled with a tiled image pattern\n */export const DRAWING_FILL_TYPES:{NONE:0;SOLID:1;PATTERN:2;};/**\n * Define the allowed Entity class types\n */export const ENTITY_TYPES:['Actor','ChatMessage','Combat','Item','Folder','JournalEntry','Macro','Playlist','RollTable','Scene','User'];/**\n * Define the allowed Entity types which may be dynamically linked in chat\n */export const ENTITY_LINK_TYPES:['Actor','Item','Scene','JournalEntry','Macro','RollTable'];/**\n * Define the allowed permission levels for a non-user Entity.\n * Each level is assigned a value in ascending order. Higher levels grant more permissions.\n */export const ENTITY_PERMISSIONS:{NONE:0;LIMITED:1;OBSERVER:2;OWNER:3;};/**\n * Define the allowed Entity types which Folders may contain\n */export const FOLDER_ENTITY_TYPES:['Actor','Item','Scene','JournalEntry','Playlist','RollTable'];/**\n * The maximum allowed level of depth for Folder nesting\n */export const FOLDER_MAX_DEPTH:3;/**\n * A list of allowed game URL names\n */export const GAME_VIEWS:['game','stream'];/**\n * The minimum allowed grid size which is supported by the software\n */export const GRID_MIN_SIZE:50;/**\n * The allowed Grid types which are supported by the software\n */export const GRID_TYPES:{GRIDLESS:0;SQUARE:1;HEXODDR:2;HEXEVENR:3;HEXODDQ:4;HEXEVENQ:5;};/**\n * A list of supported setup URL names\n */export const SETUP_VIEWS:['license','setup','players','join'];/**\n * Enumerate the source types which can be used for an AmbientLight placeable object\n */export const SOURCE_TYPES:{LOCAL:'l';GLOBAL:'g';UNIVERSAL:'u';};/**\n * An Array of valid MacroAction scope values\n */export const MACRO_SCOPES:['global','actors','actor'];/**\n * An enumeration of valid Macro types\n */export const MACRO_TYPES:{SCRIPT:'script';CHAT:'chat';};/**\n * The allowed playback modes for an audio Playlist\n * DISABLED: The playlist does not play on its own, only individual Sound tracks played as a soundboard\n * SEQUENTIAL: The playlist plays sounds one at a time in sequence\n * SHUFFLE: The playlist plays sounds one at a time in randomized order\n * SIMULTANEOUS: The playlist plays all contained sounds at the same time\n */export const PLAYLIST_MODES:{DISABLED:-1;SEQUENTIAL:0;SHUFFLE:1;SIMULTANEOUS:2;};/**\n * The allowed package types\n */export const PACKAGE_TYPES:['world','system','module'];/**\n * Encode the reasons why a package may be available or unavailable for use\n */export const PACKAGE_AVAILABILITY_CODES:{UNKNOWN:-1;REQUIRES_UPDATE:0;AVAILABLE:1;REQUIRES_SYSTEM:2;REQUIRES_DEPENDENCY:3;REQUIRES_CORE:4;};/**\n * A safe password string which can be displayed\n */export const PASSWORD_SAFE_STRING:'••••••••••••••••';/**\n * The allowed software update channels\n */export const SOFTWARE_UPDATE_CHANNELS:{/**\n * @defaultValue `'SETUP.UpdateAlpha'`\n */\nalpha:string;/**\n * @defaultValue `'SETUP.UpdateBeta'`\n */\nbeta:string;/**\n * @defaultValue `'SETUP.UpdateBeta'`\n */\nrelease:string;};/**\n * The default sorting density for manually ordering child objects within a parent\n */export const SORT_INTEGER_DENSITY:100000;/**\n * The allowed types of a TableResult document\n */export const TABLE_RESULT_TYPES:{TEXT:0;ENTITY:1;COMPENDIUM:2;};/**\n * Define the valid anchor locations for a Tooltip displayed on a Placeable Object\n */export const TEXT_ANCHOR_POINTS:{BOTTOM:0;CENTER:1;LEFT:2;RIGHT:3;TOP:4;};/**\n * Define the valid occlusion modes which an overhead tile can use\n */export const TILE_OCCLUSION_MODES:{NONE:0;FADE:1;ROOF:2;RADIAL:3;};/**\n * Describe the various thresholds of token control upon which to show certain pieces of information\n * NONE - no information is displayed\n * CONTROL - displayed when the token is controlled\n * OWNER HOVER - displayed when hovered by a GM or a user who owns the actor\n * HOVER - displayed when hovered by any user\n * OWNER - always displayed for a GM or for a user who owns the actor\n * ALWAYS - always displayed for everyone\n */export const TOKEN_DISPLAY_MODES:{NONE:0;CONTROL:10;OWNER_HOVER:20;HOVER:30;OWNER:40;ALWAYS:50;};/**\n * The allowed Token disposition types\n * HOSTILE - Displayed as an enemy with a red border\n * NEUTRAL - Displayed as neutral with a yellow border\n * FRIENDLY - Displayed as an ally with a cyan border\n */export const TOKEN_DISPOSITIONS:{HOSTILE:-1;NEUTRAL:0;FRIENDLY:1;};/**\n * Define the allowed User permission levels.\n * Each level is assigned a value in ascending order. Higher levels grant more permissions.\n */export const USER_ROLES:{NONE:0;PLAYER:1;TRUSTED:2;ASSISTANT:3;GAMEMASTER:4;};/**\n * Invert the User Role mapping to recover role names from a role integer\n */export const USER_ROLE_NAMES:{[Key in keyof typeof USER_ROLES as typeof USER_ROLES[Key]]:Key};export interface MeasuredTemplateTypes{CIRCLE:'circle';CONE:'cone';RECTANGLE:'rect';RAY:'ray';}/**\n * An enumeration of the allowed types for a MeasuredTemplate embedded document\n */export const MEASURED_TEMPLATE_TYPES:MeasuredTemplateTypes;/**\n * A list of MIME types which are treated as uploaded \"media\", which are allowed to overwrite existing files.\n * Any non-media MIME type is not allowed to replace an existing file.\n * @defaultValue\n * ```typescript\n * [\n *   'application/json',\n *   'application/ogg',\n *   'application/pdf',\n *   'audio/wave',\n *   'audio/wav',\n *   'audio/webm',\n *   'audio/ogg',\n *   'audio/midi',\n *   'audio/mpeg',\n *   'audio/opus',\n *   'audio/aac',\n *   'image/apng',\n *   'image/bmp',\n *   'image/gif',\n *   'image/jpeg',\n *   'image/png',\n *   'image/svg+xml',\n *   'image/tiff',\n *   'image/webp',\n *   'text/plain',\n *   'text/markdown',\n *   'video/mpeg',\n *   'video/mp4',\n *   'video/ogg'\n * ]\n * ```\n */export const MEDIA_MIME_TYPES:string[];export interface UserCapability{disableGM:boolean;hint:string;label:string;defaultRole:UserRole;}/**\n * Define the recognized User capabilities which individual Users or role levels may be permitted to perform\n */export const USER_PERMISSIONS:{/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.ActorCreate\",\n *    hint: \"PERMISSION.ActorCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.ASSISTANT\n * }\n * ```\n */\nACTOR_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.BroadcastAudio\",\n *    hint: \"PERMISSION.BroadcastAudioHint\",\n *    disableGM: true,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nBROADCAST_AUDIO:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.BroadcastVideo\",\n *    hint: \"PERMISSION.BroadcastVideoHint\",\n *    disableGM: true,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nBROADCAST_VIDEO:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.DrawingCreate\",\n *    hint: \"PERMISSION.DrawingCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nDRAWING_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.ItemCreate\",\n *    hint: \"PERMISSION.ItemCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.ASSISTANT\n * }\n * ```\n */\nITEM_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.FilesBrowse\",\n *    hint: \"PERMISSION.FilesBrowseHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nFILES_BROWSE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.FilesUpload\",\n *    hint: \"PERMISSION.FilesUploadHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.ASSISTANT\n * }\n * ```\n */\nFILES_UPLOAD:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.JournalCreate\"\n *    hint: \"PERMISSION.JournalCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nJOURNAL_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.MacroScript\",\n *    hint: \"PERMISSION.MacroScriptHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nMACRO_SCRIPT:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.MessageWhisper\",\n *    hint: \"PERMISSION.MessageWhisperHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nMESSAGE_WHISPER:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.NoteCreate\",\n *    hint: \"PERMISSION.NoteCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nNOTE_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.SettingsModify\",\n *    hint: \"PERMISSION.SettingsModifyHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.ASSISTANT\n * }\n * ```\n */\nSETTINGS_MODIFY:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.ShowCursor\",\n *    hint: \"PERMISSION.ShowCursorHint\",\n *    disableGM: true,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nSHOW_CURSOR:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.ShowRuler\",\n *    hint: \"PERMISSION.ShowRulerHint\",\n *    disableGM: true,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nSHOW_RULER:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.TemplateCreate\",\n *    hint: \"PERMISSION.TemplateCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nTEMPLATE_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.TokenCreate\",\n *    hint: \"PERMISSION.TokenCreateHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.ASSISTANT\n * }\n * ```\n */\nTOKEN_CREATE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.TokenConfigure\",\n *    hint: \"PERMISSION.TokenConfigureHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.TRUSTED\n * }\n * ```\n */\nTOKEN_CONFIGURE:UserCapability;/**\n * @defaultValue\n * ```typescript\n * {\n *    label: \"PERMISSION.WallDoors\",\n *    hint: \"PERMISSION.WallDoorsHint\",\n *    disableGM: false,\n *    defaultRole: USER_ROLES.PLAYER\n * }\n * ```\n */\nWALL_DOORS:UserCapability;};/**\n * The allowed directions of effect that a Wall can have\n * BOTH: The wall collides from both directions\n * LEFT: The wall collides only when a ray strikes its left side\n * RIGHT: The wall collides only when a ray strikes its right side\n */export const WALL_DIRECTIONS:{BOTH:0;LEFT:1;RIGHT:2;};/**\n * The allowed door types which a Wall may contain\n * NONE: The wall does not contain a door\n * DOOR: The wall contains a regular door\n * SECRET: The wall contains a secret door\n */export const WALL_DOOR_TYPES:{NONE:0;DOOR:1;SECRET:2;};/**\n * The allowed door states which may describe a Wall that contains a door\n * CLOSED: The door is closed\n * OPEN: The door is open\n * LOCKED: The door is closed and locked\n */export const WALL_DOOR_STATES:{CLOSED:0;OPEN:1;LOCKED:2;};/**\n * The types of movement collision which a Wall may impose\n * NONE: Movement does not collide with this wall\n * NORMAL: Movement collides with this wall\n */export const WALL_MOVEMENT_TYPES:{NONE:0;NORMAL:1;};/**\n * The types of sensory collision which a Wall may impose\n * NONE: Senses do not collide with this wall\n * NORMAL: Senses collide with this wall\n * LIMITED: Senses collide with the second intersection, bypassing the first\n */export const WALL_SENSE_TYPES:{NONE:0;NORMAL:1;LIMITED:2;};/**\n * The allowed set of HTML template extensions\n * @defaultValue `[\"html\", \"hbs\"]`\n */export const HTML_FILE_EXTENSIONS:string[];/**\n * The supported file extensions for image-type files\n * @defaultValue `[\"jpg\", \"jpeg\", \"png\", \"svg\", \"webp\"]`\n */export const IMAGE_FILE_EXTENSIONS:string[];/**\n * The supported file extensions for video-type files\n * @defaultValue `[\"mp4\", \"ogg\", \"webm\", \"m4v\"]`\n */export const VIDEO_FILE_EXTENSIONS:string[];/**\n * The supported file extensions for audio-type files\n * @defaultValue `[\"flac\", \"m4a\", \"mp3\", \"ogg\", \"opus\", \"wav\", \"webm\"]`\n */export const AUDIO_FILE_EXTENSIONS:string[];export type ActiveEffectMode=ValueOf<typeof ACTIVE_EFFECT_MODES>;export type ChatMessageType=ValueOf<typeof CHAT_MESSAGE_TYPES>;export type DiceRollMode=ValueOf<typeof DICE_ROLL_MODES>;export type DrawingFillType=ValueOf<typeof DRAWING_FILL_TYPES>;export type DrawingType=ValueOf<typeof DRAWING_TYPES>;export type EntityPermission=ValueOf<typeof ENTITY_PERMISSIONS>;export type EntityType=ValueOf<typeof ENTITY_TYPES>;export type FolderEntityTypes=ValueOf<typeof FOLDER_ENTITY_TYPES>;export type CompendiumEntityType=ValueOf<typeof COMPENDIUM_ENTITY_TYPES>;export type GridType=ValueOf<typeof GRID_TYPES>;export type MacroTypes=ValueOf<typeof CONST.MACRO_TYPES>;export type MacroScopes=ValueOf<typeof CONST.MACRO_SCOPES>;export type PackageAvailabilityCode=ValueOf<typeof PACKAGE_AVAILABILITY_CODES>;export type PackageTypes=ValueOf<typeof PACKAGE_TYPES>;export type PlaylistMode=ValueOf<typeof PLAYLIST_MODES>;export type SoftwareUpdateChannel=ValueOf<typeof SOFTWARE_UPDATE_CHANNELS>;export type SourceType=ValueOf<typeof SOURCE_TYPES>;export type TableResultType=ValueOf<typeof TABLE_RESULT_TYPES>;export type TextAnchorPoint=ValueOf<typeof TEXT_ANCHOR_POINTS>;export type TileOcclusionModes=ValueOf<typeof TILE_OCCLUSION_MODES>;export type TokenDisplayMode=ValueOf<typeof TOKEN_DISPLAY_MODES>;export type TokenDisposition=ValueOf<typeof TOKEN_DISPOSITIONS>;export type UserRole=ValueOf<typeof USER_ROLES>;export type UserRoleName=ValueOf<typeof USER_ROLE_NAMES>;export type WallDirection=ValueOf<typeof WALL_DIRECTIONS>;export type WallDoorState=ValueOf<typeof WALL_DOOR_STATES>;export type WallDoorType=ValueOf<typeof WALL_DOOR_TYPES>;export type WallMovementType=ValueOf<typeof WALL_MOVEMENT_TYPES>;export type WallSenseType=ValueOf<typeof WALL_SENSE_TYPES>;"
    ]
  