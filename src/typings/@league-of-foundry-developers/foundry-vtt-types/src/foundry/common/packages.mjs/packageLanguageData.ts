
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\packages.mjs\\packageLanguageData.d.ts",
      "import{FieldReturnType,PropertiesToSource}from'../../../types/helperTypes';import{DocumentData}from'../abstract/module.mjs';import*as fields from'../data/fields.mjs';interface PackageLanguageDataSchema extends DocumentSchema{lang:FieldReturnType<typeof fields.REQUIRED_STRING,{validate:(lang:string)=>boolean;validationError:'Invalid language code provided which is not supported by Intl.getCanonicalLocales';}>;name:typeof fields.STRING_FIELD;path:typeof fields.STRING_FIELD;system:typeof fields.STRING_FIELD;module:typeof fields.STRING_FIELD;}interface PackageLanguageDataProperties{/** A string language code which is validated by Intl.getCanonicalLocales */\nlang:string;/** The human-readable language name */\nname?:string;/** The relative path to included JSON translation strings */\npath?:string;/** Only apply this set of translations when a specific system is being used */\nsystem?:string;module?:string;}interface PackageLanguageDataConstructorData{/** A string language code which is validated by Intl.getCanonicalLocales */\nlang:string;/** The human-readable language name */\nname?:string|null;/** The relative path to included JSON translation strings */\npath?:string|null;/** Only apply this set of translations when a specific system is being used */\nsystem?:string|null;module?:string|null;}/**\n * An inner data object which represents a single language specification provided by a package in the languages array.\n */export declare class PackageLanguageData extends DocumentData<\nPackageLanguageDataSchema,PackageLanguageDataProperties,PropertiesToSource<PackageLanguageDataProperties>,PackageLanguageDataConstructorData>{static defineSchema():PackageLanguageDataSchema;/** @override */protected _initialize():void;/**\n * Validate that a language code is supported as a canonical locale\n * @param lang - The candidate language to validate\n * @returns Is it valid?\n */static validateLocale(lang:string):boolean;}export declare interface PackageLanguageData extends PackageLanguageDataProperties{}"
    ]
  