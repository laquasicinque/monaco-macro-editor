
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\settingData.d.ts",
      "import{FieldReturnType,PropertiesToSource}from'../../../../types/helperTypes';import{DocumentData}from'../../abstract/module.mjs';import*as documents from'../../documents.mjs';import*as fields from'../fields.mjs';interface SettingDataSchema extends DocumentSchema{_id:typeof fields.DOCUMENT_ID;key:DocumentField<string>&{type:typeof String;required:true;validate:typeof _validateKeyFormat;validationError:'Invalid setting key format which should be {scope}.{field}';};value:FieldReturnType<typeof fields.JSON_FIELD,{required:true}>;}interface SettingDataProperties{/**\n * The _id which uniquely identifies this Setting document\n */\n_id:string|null;/**\n * The setting key, a composite of \\{scope\\}.\\{name\\}\n */\nkey:string;/**\n * The setting value, which may be any type of data\n * @remarks This is the stringified data\n */\nvalue:string;}interface SettingDataConstructorData{/**\n * The _id which uniquely identifies this Setting document\n */\n_id?:string|null;/**\n * The setting key, a composite of \\{scope\\}.\\{name\\}\n */\nkey:string;/**\n * The setting value, which may be any type of data\n * @remarks This is the stringified data\n */\nvalue:string;}/**\n * The data schema for a Setting document.\n * @see BaseSetting\n */export declare class SettingData extends DocumentData<\nSettingDataSchema,SettingDataProperties,PropertiesToSource<SettingDataProperties>,SettingDataConstructorData,documents.BaseSetting>{/**\n * @remarks\n * This constructor is only typed to be overridden to make the first parameter\n * required. It isn't actually overridden at runtime.\n */constructor(data:SettingDataConstructorData,document?:documents.BaseSetting|null);static defineSchema():SettingDataSchema;}export declare interface SettingData extends SettingDataProperties{}/**\n * Validate that each setting key matches the expected format\n * @param key - The key to test\n * @returns Is the key valid?\n */declare function _validateKeyFormat(key:string):boolean;"
    ]
  