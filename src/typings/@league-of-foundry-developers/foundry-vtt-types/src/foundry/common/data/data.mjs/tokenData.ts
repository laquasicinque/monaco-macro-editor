
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\tokenData.d.ts",
      "import DocumentData from'../../abstract/data.mjs';import{ConfiguredFlags,FieldReturnType,PropertiesToSource}from'../../../../types/helperTypes';import{CONST,documents}from'../../module.mjs';import*as fields from'../fields.mjs';import{AnimationData,AnimationDataConstructorData}from'./animationData';import{TokenBarData,TokenBarDataConstructorData}from'./tokenBarData';import{ActorDataSource}from'./actorData.js';interface VisionFieldOptions{validate:(d:number)=>boolean;validationError:'Invalid {name} {field} distance which must be a number with absolute value less than 1000';}export interface TokenDataSchema extends DocumentSchema{_id:typeof fields.DOCUMENT_ID;name:typeof fields.STRING_FIELD;displayName:DocumentField<CONST.TokenDisplayMode>&{type:typeof Number;required:true;default:typeof CONST.TOKEN_DISPLAY_MODES.NONE;validate:(m:any)=>boolean;validationError:'Invalid {name} {field} which must be a value in CONST.TOKEN_DISPLAY_MODES';};actorId:fields.ForeignDocumentField<{type:documents.BaseActor;required:true}>;actorLink:typeof fields.BOOLEAN_FIELD;actorData:typeof fields.OBJECT_FIELD;img:FieldReturnType<typeof fields.VIDEO_FIELD,{default:()=>string}>;tint:typeof fields.COLOR_FIELD;width:FieldReturnType<typeof fields.REQUIRED_POSITIVE_NUMBER,{default:number}>;height:FieldReturnType<typeof fields.REQUIRED_POSITIVE_NUMBER,{default:number}>;scale:DocumentField<number>&{type:typeof Number;required:true;default:1;validate:(s:unknown)=>boolean;validationError:'Invalid {name} {field} which must be a number between 0.25 and 10';};mirrorX:typeof fields.BOOLEAN_FIELD;mirrorY:typeof fields.BOOLEAN_FIELD;x:typeof fields.REQUIRED_NUMBER;y:typeof fields.REQUIRED_NUMBER;elevation:typeof fields.REQUIRED_NUMBER;lockRotation:typeof fields.BOOLEAN_FIELD;rotation:FieldReturnType<typeof fields.ANGLE_FIELD,{default:number}>;effects:DocumentField<string[]>&{type:typeof String[];required:true;default:string[];};overlayEffect:typeof fields.STRING_FIELD;alpha:typeof fields.ALPHA_FIELD;hidden:typeof fields.BOOLEAN_FIELD;vision:DocumentField<boolean>&{type:typeof Boolean;required:true;default:(data:{readonly dimSight?:number;readonly brightSight?:number})=>boolean;};dimSight:FieldReturnType<typeof fields.REQUIRED_NUMBER,VisionFieldOptions>;brightSight:FieldReturnType<typeof fields.REQUIRED_NUMBER,VisionFieldOptions>;dimLight:FieldReturnType<typeof fields.REQUIRED_NUMBER,VisionFieldOptions>;brightLight:FieldReturnType<typeof fields.REQUIRED_NUMBER,VisionFieldOptions>;sightAngle:typeof fields.ANGLE_FIELD;lightAngle:typeof fields.ANGLE_FIELD;lightColor:typeof fields.COLOR_FIELD;lightAlpha:FieldReturnType<typeof fields.ALPHA_FIELD,{default:0.25}>;lightAnimation:DocumentField<AnimationData>&{type:typeof AnimationData;required:true;default:{};};disposition:DocumentField<CONST.TokenDisposition>&{type:typeof Number;required:true;default:typeof CONST.TOKEN_DISPOSITIONS.HOSTILE;validate:(n:any)=>boolean;validationError:'Invalid {name} {field} which must be a value in CONST.TOKEN_DISPOSITIONS';};displayBars:DocumentField<CONST.TokenDisplayMode>&{type:typeof Number;required:true;default:typeof CONST.TOKEN_DISPLAY_MODES.NONE;validate:(m:any)=>boolean;validationError:'Invalid {name} {field} which must be a value in CONST.TOKEN_DISPLAY_MODES';};bar1:DocumentField<TokenBarData>&{type:typeof TokenBarData;required:true;default:()=>{attribute:Game['system']['data']['primaryTokenAttribute']|null};};bar2:DocumentField<TokenBarData>&{type:typeof TokenBarData;required:true;default:()=>{attribute:Game['system']['data']['secondaryTokenAttribute']|null};};flags:typeof fields.OBJECT_FIELD;}export interface TokenDataProperties{/**\n * The Token _id which uniquely identifies it within its parent Scene\n * @defaultValue `null`\n */\n_id:string|null;/**\n * The name used to describe the Token\n */\nname?:string;/**\n * The display mode of the Token nameplate, from CONST.TOKEN_DISPLAY_MODES\n * @defaultValue `CONST.TOKEN_DISPLAY_MODES.NONE`\n */\ndisplayName:CONST.TokenDisplayMode;/**\n * The _id of an Actor document which this Token represents\n * @defaultValue `null`\n */\nactorId:string|null;/**\n * Does this Token uniquely represent a singular Actor, or is it one of many?\n * @defaultValue `false`\n */\nactorLink:boolean;/**\n * Token-level data which overrides the base data of the associated Actor\n * @defaultValue `{}`\n */\nactorData:Partial<ActorDataSource>;/**\n * A file path to an image or video file used to depict the Token\n * @defaultValue `this.DEFAULT_ICON`\n */\nimg:string|null;/**\n * An optional color tint applied to the Token image\n */\ntint?:string|null;/**\n * The width of the Token in grid units\n * @defaultValue `1`\n */\nwidth:number;/**\n * The height of the Token in grid units\n * @defaultValue `1`\n */\nheight:number;/**\n * A scale factor applied to the Token image, between 0.25 and 3\n * @defaultValue `1`\n */\nscale:number;/**\n * Flip the Token image horizontally?\n * @defaultValue `false`\n */\nmirrorX:boolean;/**\n * Flip the Token image vertically?\n * @defaultValue `false`\n */\nmirrorY:boolean;/**\n * The x-coordinate of the top-left corner of the Token\n * @defaultValue `0`\n */\nx:number;/**\n * The y-coordinate of the top-left corner of the Token\n * @defaultValue `0`\n */\ny:number;/**\n * The vertical elevation of the Token, in distance units\n * @defaultValue `0`\n */\nelevation:number;/**\n * Prevent the Token image from visually rotating?\n * @defaultValue `false`\n */\nlockRotation:boolean;/**\n * The rotation of the Token in degrees, from 0 to 360. A value of 0 represents a southward-facing Token.\n * @defaultValue `0`\n */\nrotation:number;/**\n * An array of effect icon paths which are displayed on the Token\n * @defaultValue `[]`\n */\neffects:string[];/**\n * A single icon path which is displayed as an overlay on the Token\n */\noverlayEffect?:string;/**\n * The opacity of the token image\n * @defaultValue `1`\n */\nalpha:number;/**\n * Is the Token currently hidden from player view?\n * @defaultValue `false`\n */\nhidden:boolean;/**\n * Is this Token a source of vision?\n * @defaultValue Whether dimSight or brightSight have a value greater 0.\n */\nvision:boolean;/**\n * How far in distance units the Token can naturally see as if in dim light\n * @defaultValue `0`\n */\ndimSight:number;/**\n * How far in distance units the Token can naturally see as if in bright light\n * @defaultValue `0`\n */\nbrightSight:number;/**\n * How far in distance units this Token emits dim light\n * @defaultValue `0`\n */\ndimLight:number;/**\n * How far in distance units this Token emits bright light\n * @defaultValue `0`\n */\nbrightLight:number;/**\n * The angle at which this Token is able to see, if it has vision\n * @defaultValue `360`\n */\nsightAngle:number;/**\n * The angle at which this Token is able to emit light\n * @defaultValue `360`\n */\nlightAngle:number;/**\n * The color of the token's emitted light as an HTML hexadecimal color string\n */\nlightColor:string|undefined|null;/**\n * The intensity of any light emitted by the token\n * @defaultValue `0.25`\n */\nlightAlpha:number;/**\n * A data object which configures token light animation settings\n * @defaultValue `{}`\n */\nlightAnimation:AnimationData;/**\n * A displayed Token disposition from CONST.TOKEN_DISPOSITIONS\n * @defaultValue `CONST.TOKEN_DISPOSITIONS.HOSTILE`\n */\ndisposition:CONST.TokenDisposition;/**\n * The display mode of Token resource bars, from CONST.TOKEN_DISPLAY_MODES\n * @defaultValue `CONST.TOKEN_DISPLAY_MODES.NONE`\n */\ndisplayBars:CONST.TokenDisplayMode;/**\n * The configuration of the Token's primary resource bar\n * @defaultValue `{ attribute: game?.system.data.primaryTokenAttribute || null }`\n */\nbar1:TokenBarData;/**\n * The configuration of the Token's secondary resource bar\n * @defaultValue `{ attribute: game?.system.data.secondaryTokenAttribute || null }`\n */\nbar2:TokenBarData;/**\n * An object of optional key/value flags\n * @defaultValue `{}`\n */\nflags:ConfiguredFlags<'Token'>;}export interface TokenDataConstructorData{/**\n * The Token _id which uniquely identifies it within its parent Scene\n * @defaultValue `null`\n */\n_id?:string|null;/**\n * The name used to describe the Token\n */\nname?:string|null;/**\n * The display mode of the Token nameplate, from CONST.TOKEN_DISPLAY_MODES\n * @defaultValue `CONST.TOKEN_DISPLAY_MODES.NONE`\n */\ndisplayName?:CONST.TokenDisplayMode|null;/**\n * The _id of an Actor document which this Token represents\n * @defaultValue `null`\n */\nactorId?:string|null;/**\n * Does this Token uniquely represent a singular Actor, or is it one of many?\n * @defaultValue `false`\n */\nactorLink?:boolean;/**\n * Token-level data which overrides the base data of the associated Actor\n * @defaultValue `{}`\n */\nactorData?:Partial<ActorDataSource>|null;/**\n * A file path to an image or video file used to depict the Token\n * @defaultValue `this.DEFAULT_ICON`\n */\nimg?:string|null;/**\n * An optional color tint applied to the Token image\n */\ntint?:string|null;/**\n * The width of the Token in grid units\n * @defaultValue `1`\n */\nwidth?:number|null;/**\n * The height of the Token in grid units\n * @defaultValue `1`\n */\nheight?:number|null;/**\n * A scale factor applied to the Token image, between 0.25 and 3\n * @defaultValue `1`\n */\nscale?:number|null;/**\n * Flip the Token image horizontally?\n * @defaultValue `false`\n */\nmirrorX?:boolean|null;/**\n * Flip the Token image vertically?\n * @defaultValue `false`\n */\nmirrorY?:boolean|null;/**\n * The x-coordinate of the top-left corner of the Token\n * @defaultValue `0`\n */\nx?:number|null;/**\n * The y-coordinate of the top-left corner of the Token\n * @defaultValue `0`\n */\ny?:number|null;/**\n * The vertical elevation of the Token, in distance units\n * @defaultValue `0`\n */\nelevation?:number|null;/**\n * Prevent the Token image from visually rotating?\n * @defaultValue `false`\n */\nlockRotation?:boolean|null;/**\n * The rotation of the Token in degrees, from 0 to 360. A value of 0 represents a southward-facing Token.\n * @defaultValue `0`\n */\nrotation?:number|null;/**\n * An array of effect icon paths which are displayed on the Token\n * @defaultValue `[]`\n */\neffects?:string[]|null;/**\n * A single icon path which is displayed as an overlay on the Token\n */\noverlayEffect?:string|null;/**\n * The opacity of the token image\n * @defaultValue `1`\n */\nalpha?:number|null;/**\n * Is the Token currently hidden from player view?\n * @defaultValue `false`\n */\nhidden?:boolean|null;/**\n * Is this Token a source of vision?\n * @defaultValue Whether dimSight or brightSight have a value greater 0.\n */\nvision?:boolean|null;/**\n * How far in distance units the Token can naturally see as if in dim light\n * @defaultValue `0`\n */\ndimSight?:number|null;/**\n * How far in distance units the Token can naturally see as if in bright light\n * @defaultValue `0`\n */\nbrightSight?:number|null;/**\n * How far in distance units this Token emits dim light\n * @defaultValue `0`\n */\ndimLight?:number|null;/**\n * How far in distance units this Token emits bright light\n * @defaultValue `0`\n */\nbrightLight?:number|null;/**\n * The angle at which this Token is able to see, if it has vision\n * @defaultValue `360`\n */\nsightAngle?:number|null;/**\n * The angle at which this Token is able to emit light\n * @defaultValue `360`\n */\nlightAngle?:number|null;/**\n * The color of the token's emitted light as an HTML hexadecimal color string\n */\nlightColor?:string|null;/**\n * The intensity of any light emitted by the token\n * @defaultValue `0.25`\n */\nlightAlpha?:number|null;/**\n * A data object which configures token light animation settings\n * @defaultValue `{}`\n */\nlightAnimation?:AnimationDataConstructorData|null;/**\n * A displayed Token disposition from CONST.TOKEN_DISPOSITIONS\n * @defaultValue `CONST.TOKEN_DISPOSITIONS.HOSTILE`\n */\ndisposition?:CONST.TokenDisposition|null;/**\n * The display mode of Token resource bars, from CONST.TOKEN_DISPLAY_MODES\n * @defaultValue `CONST.TOKEN_DISPLAY_MODES.NONE`\n */\ndisplayBars?:CONST.TokenDisplayMode|null;/**\n * The configuration of the Token's primary resource bar\n * @defaultValue `{ attribute: game?.system.data.primaryTokenAttribute || null }`\n */\nbar1?:TokenBarDataConstructorData|null;/**\n * The configuration of the Token's secondary resource bar\n * @defaultValue `{ attribute: game?.system.data.secondaryTokenAttribute || null }`\n */\nbar2?:TokenBarDataConstructorData|null;/**\n * An object of optional key/value flags\n * @defaultValue `{}`\n */\nflags?:ConfiguredFlags<'Token'>|null;}/**\n * The data schema for a Token document.\n */export class TokenData extends DocumentData<\nTokenDataSchema,TokenDataProperties,PropertiesToSource<TokenDataProperties>,TokenDataConstructorData,documents.BaseToken>{static defineSchema():TokenDataSchema;/**\n * The default icon used for newly created Item documents\n * @defaultValue `CONST.DEFAULT_TOKEN`\n */static DEFAULT_ICON:string;}export declare interface TokenData extends TokenDataProperties{}"
    ]
  