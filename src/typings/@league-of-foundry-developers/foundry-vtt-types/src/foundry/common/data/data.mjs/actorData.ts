
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\actorData.d.ts",
      "import EmbeddedCollection from'../../abstract/embedded-collection.mjs';import{ConfiguredData,ConfiguredDocumentClass,ConfiguredFlags,ConfiguredSource,FieldReturnType,PropertiesToSource}from'../../../../types/helperTypes';import{DocumentData}from'../../abstract/module.mjs';import*as documents from'../../documents.mjs';import*as fields from'../fields.mjs';import{PrototypeTokenData}from'../data.mjs';import{PrototypeTokenDataConstructorData}from'./prototypeTokenData.js';interface ActorDataSchema extends DocumentSchema{_id:typeof fields.DOCUMENT_ID;name:typeof fields.REQUIRED_STRING;type:DocumentField<string>&{type:typeof String;required:true;validate:(t:unknown)=>boolean;validationError:'The provided Actor type must be in the array of types defined by the game system';};img:FieldReturnType<typeof fields.IMAGE_FIELD,{default:()=>string}>;data:FieldReturnType<typeof fields.OBJECT_FIELD,{default:(data:{type:string})=>any}>;token:DocumentField<PrototypeTokenData>&{type:typeof PrototypeTokenData;required:true;default:(data:unknown)=>{name:string;img:string};};items:fields.EmbeddedCollectionField<typeof documents.BaseItem>;effects:fields.EmbeddedCollectionField<typeof documents.BaseActiveEffect>;folder:fields.ForeignDocumentField<{type:typeof documents.BaseFolder}>;sort:typeof fields.INTEGER_SORT_FIELD;permission:typeof fields.DOCUMENT_PERMISSIONS;flags:typeof fields.OBJECT_FIELD;}interface ActorDataBaseProperties{/**\n * The _id which uniquely identifies this Actor document\n * @defaultValue `null`\n */\n_id:string|null;/**\n * The name of this Actor\n */\nname:string;/**\n * An Actor subtype which configures the system data model applied\n */type:string;/**\n * An image file path which provides the artwork for this Actor\n * @defaultValue `ActorDataConstructor.DEFAULT_ICON`\n */\nimg:string|null;/**\n * The system data object which is defined by the system template.json model\n */\ndata:object;/**\n * Default Token settings which are used for Tokens created from this Actor\n */\ntoken:PrototypeTokenData;/**\n * A Collection of Item embedded Documents\n */\nitems:EmbeddedCollection<ConfiguredDocumentClass<typeof documents.BaseItem>,ActorData>;/**\n * A collection of ActiveEffect embedded Documents\n */\neffects:EmbeddedCollection<ConfiguredDocumentClass<typeof documents.BaseActiveEffect>,ActorData>;/**\n * The _id of a Folder which contains this Actor\n * @defaultValue `null`\n */\nfolder:string|null;/**\n * The numeric sort value which orders this Actor relative to its siblings\n * @defaultValue `0`\n */\nsort:number;/**\n * An object which configures user permissions to this Actor\n * @defaultValue `{ default: CONST.ENTITY_PERMISSIONS.NONE }`\n */\npermission:Partial<Record<string,foundry.CONST.EntityPermission>>;/**\n * An object of optional key/value flags\n * @defaultValue `{}`\n */\nflags:ConfiguredFlags<'Actor'>;}interface ActorDataConstructorData{/**\n * The _id which uniquely identifies this Actor document\n * @defaultValue `null`\n */\n_id?:string|null;/**\n * The name of this Actor\n */\nname:string;/**\n * An Actor subtype which configures the system data model applied\n */type:ActorDataSource['type'];/**\n * An image file path which provides the artwork for this Actor\n * @defaultValue `ActorDataConstructor.DEFAULT_ICON`\n */\nimg?:string|null;/**\n * The system data object which is defined by the system template.json model\n */\ndata?:DeepPartial<ActorDataSource['data']>|null;/**\n * Default Token settings which are used for Tokens created from this Actor\n */\ntoken?:PrototypeTokenDataConstructorData|null;/**\n * A Collection of Item embedded Documents\n */\nitems?:ConstructorParameters<ConfiguredDocumentClass<typeof documents.BaseItem>>[0][]|null;/**\n * A collection of ActiveEffect embedded Documents\n */\neffects?:ConstructorParameters<ConfiguredDocumentClass<typeof documents.BaseActiveEffect>>[0][]|null;/**\n * The _id of a Folder which contains this Actor\n * @defaultValue `null`\n */\nfolder?:string|null;/**\n * The numeric sort value which orders this Actor relative to its siblings\n * @defaultValue `0`\n */\nsort?:number|null;/**\n * An object which configures user permissions to this Actor\n * @defaultValue `{ default: CONST.ENTITY_PERMISSIONS.NONE }`\n */\npermission?:Partial<Record<string,foundry.CONST.EntityPermission>>|null;/**\n * An object of optional key/value flags\n * @defaultValue `{}`\n */\nflags?:ConfiguredFlags<'Actor'>|null;}type ActorDataBaseSource=PropertiesToSource<ActorDataBaseProperties>;type ActorDataProperties=ActorDataBaseProperties&ConfiguredData<'Actor'>;type ActorDataSource=ActorDataBaseSource&ConfiguredSource<'Actor'>;type DocumentDataConstructor=Pick<typeof DocumentData,keyof typeof DocumentData>;interface ActorDataConstructor extends DocumentDataConstructor{new(data:ActorDataConstructorData,document?:documents.BaseActor|null):ActorData;defineSchema():ActorDataSchema;/**\n * The default icon used for newly created Actor documents\n * @defaultValue `CONST.DEFAULT_TOKEN`\n */\nDEFAULT_ICON:string;}/**\n * The data schema for an Actor document.\n * @see BaseActor\n */export type ActorData=DocumentData<\nActorDataSchema,ActorDataProperties,ActorDataSource,ActorDataConstructorData,documents.BaseActor>&\nActorDataProperties&{_initializeSource(data:ActorDataConstructorData):ActorDataSource;_initialize():void;};export declare const ActorData:ActorDataConstructor;"
    ]
  